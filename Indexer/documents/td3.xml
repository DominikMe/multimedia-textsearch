<?xml version='1.0' encoding='utf-8' standalone='yes'?>
<timed-document file="https://www.youtube.com/watch?v=yaEfDjlftwg">
  <slot end="30" start="0"></slot>
  <slot end="60" start="30"></slot>
  <slot end="90" start="60">Sanders: Algorithmen] mi s w:  I33Ilashtabeenspeichere MengeM Q Element.key(e) ist eindeutig fr e e M.untersttze Wrterbuch-Operationen in Zeit 0(1).gilnnserlic : Element]: M I=MU {e}Mmemoveik : Key]: M :=  e : krifindik : Key]: return e E M with e : k; L falls nichts gefundenAnderes Interface: map/partielle Funktion Key&gt;EIementM k : Mfind(k)3UcuE3xH:(UELOH-E1-7V1mU.Qcu3Q|-m&lt;3:umLLI|2S!4   http</slot>
  <slot end="120" start="90">Snden: Algorilhnlcn] \1.t\ a w:  I37Ein (ber)0ptimistischer AnsatzEine perfekte Hash-Funktion hbildet Elemente von M injektivauf eindeutige Eintrgeder Tabelle {[0411  l] ab, d. h.,rth(key(e&gt;&gt;] : e |-m&lt;umLLI|2v7 3Ucut5x.xH:(UELu?E1-7VI.9cu3FQ.3s </slot>
  <slot end="150" start="120">Szmders: Algorithmen] im a. m:  I37Ein (ber)0ptimistischer AnsatzEine perfekte Hash-Funktion l1bildet Elemente von M injektivauf eindeutige Eintrgeder Tabelle r[0m  1] ab, d. h.,rih(key(e&gt;&gt;] : e |-m&lt;umLLItv7 3UcuE-%xH:fUELu?E1-7V13.Qcu3FQ.3s </slot>
  <slot end="180" start="150">Smdcrs: Algorithmen] m a. w:  13xKollisionenPerfekte Hash-Funktionen sind schwer zu finden Beispiel: Geburtstagsparadox3UcuE-4xH:fUELOH-E1-7VImU.Qcu3Q|-m&lt;EumLLIE|2vW   http</slot>
  <slot end="210" start="180">Snden: Algorithmen] m a w:  119KollisionsausungEine Mglichkeit:Tabelleneintrge: Elemente w Folgen von Elementen |-m&lt;EumLIJE|2vW   3UcuEx.x'43(UELu?E1-7VI3.Qcu3FQ.5s</slot>
  <slot end="240" start="210">Szmders: Algorithmen] m n. 3m:  I404.1 Hashing mit verketteten ListenImplementiere die Folgen in den Tabelleneintrgendurch einfach verkettete Listenlnsertl UJZ Fge e am Anfang von I[h(e)] ein.removelk]: DurchIaufeI[/1(k)].Elemente mit key(e) : k gefunden?w lschen und zurckliefern.flnd(/&lt;1 : DurchlaufeI[/1(k)].Elemente mit key(e) : k gefunden?w zurckliefern.Sonst: L zurckgeben.3UcuE3xH:(UELOH-E1-7V1mK).Qcu3Q |-m&lt;EumLIJE|2vWhttp   </slot>
  <slot end="270" start="240">|-m&lt;umLIJE':.vW Szmdcrs: Algorithmen] \1.i\ 3 w:dT ZAnalyseinsert( v J: konstante Zeitremove(k]: O(Listenlnge)finck] : O(Listenlnge)*r\i&gt;2:3&lt;&gt;&lt;&gt; Aber wie lang werden die Listen?  &gt;h(k. S}Schlechtester Fall: OMi) Q3S}Besser wenn wir genug Chaos anrichten? \\/ t 5cuEx.x'43(UEl-OH-E1-7VImUQcu3Qhttp: </slot>
  <slot end="300" start="270">Sindcrs: Algorithmen] \1.i\ . w:  I42Analyseinserti U i: konstante Zeitremoveik]: O(Listenlnge)_ l7 &gt;find(/&lt;] : O(Listenlnge) g i: \ .&lt;&gt;Aberwie lang werden die Listen? i O O   hmli k  s ' QSchlechtester Fall: O(iMi) \ w i }\\M y _&lt;&gt;Besser wenn wir genug Chaos anrichten? /" t 5cuE3x'43(UEl-OH-E1-7VImUQcu3Q|-m&lt;umLIJE':.vWhttp   </slot>
  <slot end="330" start="300">|-m&lt;EumLIJE|2vW Szindcrs: Algorithmen] m m w:  I43Etwas Wahrscheinlichkeitstheoriefr den HausgebrauchG)HasnBeispieiHashFunktionen{()../1i l Q: :{/1 Q:/1(4] :/1(2]}py :WahrscheinIichkeitvonx 6 Q. 2x11, : l !Gleichverteilung: p; :  12 : m K : EXEE Px i} 64l : f,Zufallsvariable (ZV) X0 : Q &gt; R X : {U E M :/1(z'J : 0} .O-1-Zufallsvariable (Indikator-ZV) I : Q a {t}, 1}Erwartungswert EiXo] : 2&amp;9 pV\.X(_V)Linearitt des Erwartungswerts: E[X + Y] : E[X] +E[Y]Elementarereignisse QEreignisse: Teilmengen von Q 3Ucut54xH:(UELu?E1-7VI3.9cu3FQ.o:s</slot>
  <slot end="360" start="330">|-m&lt;EumLIJE|2vW Snden: Algorithmen] mx s. w:  I43Etwas Wahrscheinlichkeitstheoriefr den HausgebrauchG)HasheispieiHashFunktionen{()..r1i l 4; :{/1 Q:/1(4] :/1i2]}py :WahrscheinIichkeit von x E Q. 2x11, : l !Gleichverteilung: p, :  12 : m K : EXEE 17x : '54: : f,Zufallsvariable (ZV) X0 : Q &gt; R X : {U E M : Im] : 0}0-1-Zufallsvariable (Indikator-ZV) I : Q a {t}, 1}Erwartungswert E[X] : 2.59 pv\.X(_v) E X :Linearitt des Erwartungswerts: E[X + Y] : E[X] +E[Y]Elementarereignisse QEreignisse: Teilmengen von Qi]m3UcuE3x'43(UELOH-E1-7V1mU.9cu3Q http</slot>
  <slot end="390" start="360">|-m&lt;EumLIJE|2vW Snden: Algorithmen] m . m:  I43Etwas Wahrscheinlichkeitstheoriefr den HausgebrauchG)HashBeispieiHashFunktionen{()..rn  l ([43 :{/1 Q:/1(4] :/1(Z]}py :WahrscheinIichkeitvonx E Q. 2x11, : l !Gleichverteilung: p, :  12 : m KM5] : ZxEE 17x H '54: : f,Zufallsvariable (ZV) X0 : Q &gt; R X : {U E M : M0) : 0}0-1-Zufallsvariable (Indikator-ZV) I : Q a {t}, 1}Erwartungswert E[X(] : 2.59 p.X(_v) E X : Linearitt des Erwartungswerts: EiX + Y] : E[X] +E[Y]Elementarereignisse QEreignisse: Teilmengen von Q3UcuE4x'43(UELOH-E1-7VImK).Qcu3Q http</slot>
  <slot end="420" start="390">|-m&lt;EumLIJE|2vW Sztndcrs: Algorithmen] m n w:  I43Etwas Wahrscheinlichkeitstheoriefr den HausgebrauchG)HashBeispieiHashFunktionen{()../n  l }KyQ: : {l1 E S2:/1(41:/1i2]}p, :WahrscheinIichkeitv0nx E Q. 2x11, : l !Gleichverteilung: p; :  12 : m KM5] : ZxEE 17x U; 441 : f,Zufallsvariable (ZV) X0 : Q &gt; R X : {U E M : Im] : )}O-1-Zufallsvariable (Indikator-ZV) I : Q a {t}, 1}Erwartungswert E[X(] : 2,59 pyXLV) E X : Linearitt des Erwartungswerts: E[X + Y] : E[X] +E[Y]Elementarereignisse QEreignisse: Teilmengen von Q 3UcuE4x'43(UELu?E1-7V13.9cu3FQ.3s</slot>
  <slot end="450" start="420">|-m&lt;EumLIJE|2vW Simdcrs: Algorithmen! m  w:  I43Etwas Wahrscheinlichkeitstheoriefr den HausgebrauchG)HashBeispieiHashFunktionen{()../n  l Q3 : {l1 E S2:/1(41:/1i2]}py :WahrscheinIichkeitvonx G Q. 2x11, : l !Gleichverteilung: p, :  12 : m ' KM5] : 2:55 17x U5 i541 : f,Zufallsvariable (ZV) X0 : Q &gt; R X : {v E M : Im] : 0}0-1-Zufallsvariable (Indikator-ZV) I : Q a {i}, 1}Erwartungswert E[Xo] : 2.59 pv\.X(_v) E X :Linearitt des Erwartungswerts: E[X + Y] : E[X] +E[Y]Elementarereignisse QEreignisse: Teilmengen von QIIi/I 3UwE4xH:(UELu?E1-7VI3.9cu3FQ.o:s</slot>
  <slot end="480" start="450">|-m&lt;EumLIJE|2vW Szindcrs: Algorithmen] m 3 w:  I43Etwas Wahrscheinlichkeitstheoriefr den HausgebrauchG)HashBeispieiHashFunktionen{0ni  l }KyC43 :{/1 S2:/1(41:/1i2]}py :WahrscheinIichkeitvonx 6 Q. 2x11, : l !Gleichverteilung: p; :  12 : m K : ZXEE px H: '54) : i!Zufallsvariable (ZV) X0 : Q &gt; R X : {U E M : Im; : 0} .O-1-Zufallsvariable (Indikator-ZV) I : Q a {t}, 1}Erwartungswert E[X(] : 2.59 pv\.X(_v) E X : Linearitt des Erwartungswerts: EiX + Y] : E[X] +E[Y]Elementarereignisse QEreignisse: Teilmengen von Q3UcuE-4xH:(UELOH-E1-7VImK).9cu3Q http</slot>
  <slot end="510" start="480">|-m&lt;EumLIJE|2vW Szindcrs: Algorithmen] m s wir:  I43Etwas Wahrscheinlichkeitstheoriefr den HausgebrauchG)HasirBeispieiHashFunktionen{()..r1i  l }KyC4; :{/1 S2:/1(4]:/1(2]}py :WahrscheinIichkeitvonx E Q. 2x11, : l !Gleichverteilung: p, :  12 : m ' KEDV] : 25517.: L: i545 : i,Zufallsvariable (ZV) X0 : Q &gt; R X : {U E .11 : Im) : 0} .O-1-Zufallsvariable (Indikator-ZV) I : Q a {t}, 1}Erwartungswert E[X(] : 2.59 pv\.X(_v) E X : Linearitt des Erwartungswerts: EiX + Y] : E[X] +E[Y]Elementarereignisse QEreignisse: Teilmengen von Q3Ucu.5*4xH:fUELOH-.5h7VImK).Qcu3Q http</slot>
  <slot end="540" start="510">|-m&lt;EumLIJE|2vW Szmdcrs: Algorithmen] m m wir:  I43Etwas Wahrscheinlichkeitstheoriefr den HausgebrauchG)HashBeispieiHashFunktionen{()../n  l c4; : {l1 g s2 ; m4; :m2i}p :WahrscheinIichkeitvonx G Q. 2x17; : l !Gleichverteilung: p, :  12 : m K : ZxEE px H: '54: : i!Zufallsvariable (ZV) X0 : Q &gt; R X : {U E M :/1(U} : 0} .0-1-Zufallsvariable (Indikator-ZV) 1 : Q a {t}, 1}Erwartungswert E[X(] : 2.59 pv\.X(_v) E X : Linearitt des Erwartungswerts: E[X + Y] : E[X] +E[Y]Elementarereignisse QEreignisse: Teilmengen von Q3Ucu3;*4xH:fUE-OH-Eh7V1mK).9cu3Q http</slot>
  <slot end="570" start="540">|-m&lt;EumLIJE|2vW Szinders: Algorithmen] m. a wir:  I43Etwas Wahrscheinlichkeitstheoriefr den HausgebrauchG)HashBeispieiHashFunktionen{()../n  l }Ky4; :{/1 S2:/1(4] :/1(2i}p :WahrscheinIichkeitvonx 6 Q. 2x11, : l !Gleichverteilung: p, :  pi, : m K : EXEE Px D; A43 : i,Zufallsvariable (ZV) X0 : Q &gt; R X : {U E M : Im; : 0} .0-1-Zufallsvariable (Indikator-ZV) I : Q a {t}, 1}Erwartungswert E[X(] : 2.59 pv\.X(_v) E X : 1Linearitt des Erwartungswerts: EiX + Y] : E[X] +E[Y]Elementarereignisse QEreignisse: Teilmengen von Q 3Ucu3;x.xH:(UELu?Eh7V13.9cu3FQ.5s</slot>
  <slot end="600" start="570">|-m&lt;EumLIJE|2vW Szindcrs: Algorithmen] m s wir:  I43Etwas Wahrscheinlichkeitstheoriefr den HausgebrauchG)HashBeispieiHashFunktionen{()..Hi  l }KyC4; :{/1 Q:/1(4] :/1i2]}py :WahrscheinIichkeit von x E Q. E, m : l !Gleichverteilung: p, :  12 : m K : ZxEE px H: C43 : i,Zufallsvariable (ZV) X0 : Q &gt; R X : {U E M : Im] : 0}0-1-Zufallsvariable (Indikator-ZV) I : Q a {t}, 1}Erwartungswert E[X(] : 2.59 pv\.X(_v) E X : Linearitt des Erwartungswerts: E[X + Y] : E[X] +E[Y]Elementarereignisse QEreignisse: Teilmengen von Q3UcuE3x'43(UELOH-E1-7V1mU.9cu3Q http</slot>
  <slot end="630" start="600">|-m&lt;EumLIJE|2vW Szmdc-rs: Algorithmen! \1.i\ a w:  I43Etwas Wahrscheinlichkeitstheoriefr den HausgebrauchG)HashBeispieiHashFunktionen{()../n  l ([43 : {l1 E S2 : /i(4i :/1i2]}py :WahrscheinIichkeitvonx G 512x11, : l !Gleichverteilung: p, :  12 : m K : ZxEE px HE C41 : i!Zufallsvariable (ZV) X0 : Q &gt; R X : {c E M : Im) : 0} .0-1-Zufallsvariable (Indikator-ZV) 1 : Q a {i}, 1}Erwartungswert E[X{] : 2,59 pyXLV) E X : Linearitt des Erwartungswerts: EiX + Y] : E[X] +E[Y]Elementarereignisse QEreignisse: Teilmengen von Q3Ucu.5-4xH:(UELOH-.5h7V1mK).9cu3Q http</slot>
  <slot end="660" start="630">|-m&lt;EumLIJE|2vW Sandcrs: Algorilhnlcnl m a. w: Etwas Wahrscheinlichkeitstheoriefr den HausgebrauchHashBeispieiHashFunktionen{()../n  l C4; :{/1 Q:/1(4] :/1(2]}p :WahrscheinIichkeitvonx E Q. 2x17; : l !Gleichverteilung: p, :  12 : m ' K : ZxEE px M: "341 : i!Zufallsvariable (ZV) X0 : Q &gt; R X : {U E M : /1(Ui : 0} .0-1-Zufallsvariable (Indikator-ZV) 1 : Q e {0, 1}Erwartungswert E[X(] : 2,59 pyXLV) E X : 4%Linearitt des Erwartungswerts: EiX + Y] : E[X] +E[Y]Elementarereignisse QEreignisse: Teilmengen von QI433UcuE3xH:(UELOH-E1-7V1mU.9cu3Q http</slot>
  <slot end="690" start="660">|-m&lt;EumLIJE|2vW Sznnders: Algorilhnlcn] m z. m:  I43Etwas Wahrscheinlichkeitstheoriefr den HausgebrauchG)HashBeispieiHashFunktionen{()/n  l e43 :{/1{ s2 ; m4) : m21}m :WahrscheinIichkeitv0nx E Q. 2x17; : l !Gleichverteilung: p; :  12 : m ' KM5] : ZxEE 17x  (54: : f,Zufallsvariable (ZV) X0 : Q &gt; R X : {U E W : IHM : 0}O-1-Zufallsvariable (Indikator-ZV) I : Q e {i}, 1}Erwartungswert EIXO] : 2.59 pv\.X(_v) E X : Linearitt des Erwartungswerts: EiX + Y] : E[X] +E[Y]Elementarereignisse QEreignisse: Teilmengen von Q3UcuE4xH:(UELOH-E1-7VImJ.9cu3Q http</slot>
  <slot end="720" start="690">|-m&lt;EumLIJE|2vW Szindcrs: Algorithmen] m. a. w:  I43Etwas Wahrscheinlichkeitstheoriefr den HausgebrauchG)HashBeispieiHashFunktionen{()../n  l C4; : {l1 E S2:/1(4]:/1i2]}py :WahrscheinIichkeitvonx 6 Q. E, px : l !Gleichverteilung: px :  12 : m K : ZLXEE 17x : 541 : f,Zufallsvariable (ZV) X0 : Q &gt; R X : {U E M : Im} : 0} .O-1-Zufallsvariable (Indikator-ZV) I : Q a {t}, 1}Erwartungswert E[X(] : 2.69 pv\.X(_v) E X : VLinearitt des Erwartungswerts: E[X + Y] : E[X] +E[Y]Elementarereignisse QEreignisse: Teilmengen von QIIl/I3Ucu.5-4xH:(UELOH-.5h7VImK).9cu3Q http</slot>
  <slot end="750" start="720">|-m&lt;EumLIJE|2vW Szinders: Algorilhnlcnl m s. w:  I43Etwas Wahrscheinlichkeitstheoriefr den HausgebrauchG)HashFunktionen{0/n  l4; :{/1 S2:/1(4] :/1(2]}py :WahrscheinIichkeit von x E Q. 2x17; : l !Gleichverteilung: p; :  12 : m KM5] : 25517.: H: M3 : i,Zufallsvariable (ZV) X0 : Q &gt; R X : {U E M : Im) : 0} .0-1-Zufallsvariable (Indikator-ZV) 1 : Q a {t}, 1}Erwartungswert EiXo] : 2.59 pv\.X(_v) E X : Linearitt des Erwartungswerts: EiX + Y] : E[X] +E[Y]HashBeispieiElementarereignisse Q Ereignisse: Teilmengen von Q 3Ucut5x.xH:(UELu?E1-7VI3.9cu3FQ.3s</slot>
  <slot end="780" start="750">|-m&lt;EumLIJE|2vW Szindcrs: Algorithmen] m a. w;  I43Etwas Wahrscheinlichkeitstheoriefr den HausgebrauchG)HasheispieiHashFunktionen{()../n  l c4; :{/1{ S2:/1(-1]:/i(2i}py :WahrscheinIichkeit von x 6 Q. 2x11, : l !Gleichverteilung: p, :  12 : m K : ZxEE px H: 6x43 : i,Zufallsvariable (ZV) X0 : Q &gt; R X : {U E M : Im; : 0}O-1-Zufallsvariable (Indikator-ZV) I : Q a {t}, 1}Erwartungswert E[X(] : 2.59 pv\.X(_v) E X : Linearitt des Erwartungswerts: E[X + Y] : E[X] +E[Y]Elementarereignisse QEreignisse: Teilmengen von Q 3UcuE4xH:(UELu?E1-7V13.9cu3FQ.a:s</slot>
  <slot end="810" start="780">|-m&lt;EumLIJE|2vW Szindc-rs: Algorithmen] m a. w:  I43Etwas Wahrscheinlichkeitstheoriefr den HausgebrauchG)HashBeispieiHashFunktionen{()../n  l C4; :{/1 S2:/1(4] :/1(2]}py :WahrscheinIichkeitvonx E 512x17; : l !Gleichverteilung: p, :  12 : m KPW] : ZxEE 17x H1 '54: : f,Zufallsvariable (ZV) X0 : Q &gt; R X : i {U E M : Im; : 0} u.0-1-ZufaIIsvariabIe (Indikator-ZV) I : Q a {0, 1}Erwartungswert EiXo] : 2.59 pv\.X(_v) E X : %Linearitt des Erwartungswerts: EiX + Y] : E[X] +E[Y]Elementarereignisse QEreignisse: Teilmengen von Q3UcuE3xH:(UELOH-E1-7V1mU.9cu3Q http</slot>
  <slot end="840" start="810">|-m&lt;EumLIJE|2vW Snden: Algorithmen] m a. w:  I43Etwas Wahrscheinlichkeitstheoriefr den HausgebrauchG)HasnBeispielHashFunktionen{()../n  l W43 :{/1E Q:/1(4l :/1(2]}py :Wahrscheinlichkeitvonx E Q. 2x11, : l !Gleichverteilung: p, :  pi, : m K : ZJEE 17x M? '54: : i,Zufallsvariable (ZV) X0 : Q &gt; R X : {c E M : /l((l : 0} .0-1-Zufallsvariable (Indikator-ZV) I : Q a {t}, 1}Erwartungswert ElXo] : 2&amp;9 pV\.X(_V)Linearitt des Erwartungswerts: ElX + Y] : ElX] +E[Y]Elementarereignisse QEreignisse: Teilmengen von Q 3Uw3;x.xH:(UELu?Eh7V13.9cu3FQ.5s</slot>
  <slot end="870" start="840">|-m&lt;EumLIJE|2vW Sandcrs: Algorithmen] \1.i\  w:  I43Etwas Wahrscheinlichkeitstheoriefr den HausgebrauchG)HasnBeispieiHashFunktionen{()/n  l }KyC4; :{/1 Q : /1(4] :/1i2]}py :WahrscheinIichkeitvonx E Q. 2x11, : l !Gleichverteilung: p, :  12 : m KM5] : 25517.: H: (P4i : i,Zufallsvariable (ZV) X0 : Q &gt; R X : {v E M : Im) : 0} .O-1-Zufallsvariable (Indikator-ZV) I : Q a {t}, 1}Erwartungswert E[X(] : 2,59 pyXLV) E X : Linearitt des Erwartungswerts: E[X + Y] : E[X] +E[Y]Elementarereignisse QEreignisse: Teilmengen von Q3UcuE3x'43(UELOH-.51-7VImJ.9cu3Q http</slot>
  <slot end="900" start="870">|-m&lt;EumLIJE|2vW Simdcrs: Algorithmen] mt a. w:  I43Etwas Wahrscheinlichkeitstheoriefr den HausgebrauchG)HasheispieiHashFunktionen{()../n  l }Kyc4; :{/1{ s2 ; m4) : m21}py :WahrscheinIichkeit von x 6 Q. 2x11, : l !Gleichverteilung: p, :  12 : m ' K : EXEE Px : '54: : hZufallsvariable (ZV) X0 : Q &gt; R X : {U E M : Im) : 0}0-1-ZufaIIsvariabIe (Indikator-ZV) I : Q e {t}, 1}Erwartungswert E[X] : 2.59 pv\.X(_v) E X : Linearitt des Erwartungswerts: E[X + Y] : E[X] +E[Y]Elementarereignisse QEreignisse: Teilmengen von QIIm3UwE4xH:(UELOH-E1-7V1mK).9cu3Q http</slot>
  <slot end="930" start="900">|-m&lt;EumLIJE|2vW Sandcrs: Algorithmen] m 5 w:  I43Etwas Wahrscheinlichkeitstheoriefr den HausgebrauchG)HasheispielHashFunktionen{()../n  l 4; :{/1 Q:/1(4l :/1(2]}py :Wahrscheinlichkeit von x 6 Q. 2x11, : l !Gleichverteilung: p, :  12 : m KM5] : B5511: H5 41 : i,Zufallsvariable (ZV) X0 : Q &gt; R X : {U E l4 : Im] : 0} .0-1-Zufallsvariable (Indikator-ZV) I : Q a {0, 1}Erwartungswert ElXo] : 2.59 pv\.X(_v) E X : Linearitt des Erwartungswerts: ElX + Y] : ElX] +ElY]Elementarereignisse QEreignisse: Teilmengen von Q3UcuE3x'43(UELOH-.51-7V1mJ.9cu3Q http</slot>
  <slot end="960" start="930">|-m&lt;EumLIJE|2vW Simdcrs: Algorithmen! m z. w:  I43Etwas Wahrscheinlichkeitstheoriefr den HausgebrauchG)HashBeispieiHashFunktionen{()../n  l ([43 :{/1 Q:/1(-1] :/1i2]}py :WahrscheinIichkeit von x 6 Q. 2x11, : l !Gleichverteilung: p, :  12 : m K : EXEE 17x : '74: : hZufallsvariable (ZV) X0 : Q &gt; R X : {e E M : Im); : 0} .0-1-Zufallsvariable (Indikator-ZV) I : Q a {0, 1}Erwartungswert E[X(,] : 2.59 pv\.X(_v) E X : 1Linearitt des Erwartungswerts: EiX + Y] : E[X] +E[Y]Elementarereignisse QEreignisse: Teilmengen von Q 3Ucu3;x.xH:(UELu?Eh7VI3.9cu3FQ.5s</slot>
  <slot end="990" start="960">Snden: Algorithmen] mi w. m1:  I44Beispiel: Variante des GeburtstagsparadoxonWieviele Gste muss eine Geburtstagsparty im Mittel haben, damitmindestens zwei Gste den gleichen Geburtstag haben?Gste ln.Elementarereignisse: h G Q : {0364}{]"}.Definiere Indikator-ZV I,&gt;_, : l gdw h(i) : Anzahl Paare mit gleichem Geburtstag: X : 2L, 31:, 1U.ll Il H llElXl:ElZ 2 MP2 2 Eilij]1:11:41 i:lj:i 1" n(nl) l: H) 1.. :l : f121; i i 2 3653Uw3;4xH:(UELOH-Eh7V1mK).Qcu3Q1-m&lt;EumLIJE|2vWi l /li1 &lt;:&gt;n:i+ 27+730x 26,52   http</slot>
  <slot end="1020" start="990">Sande-n: Algorilhnlcn] m1 x wir  I44Beispiel: Variante des GeburtstagsparadoxonWieviele Gste muss eine Geburtstagsparty im Mittel" haben, damitmindestens zwei Gste den gleichen Geburtstag haben?Gste ln.Elementarereignisse: h E Q : {0364}{l"}.Definiere IndikatorZV I,&gt;_, : l gdw h(i) : Anzahl Paare mit gleichem Geburtstag: X : [L1 272415.I1 I1 I! I1ElXl:El2 2 MP2 2 ElIi/l1:11:41 1:112 1" n(nl) l: H) 1.. :l : f121; L ] 2 3653Ucut74xH:(UELOH-E1-7VImK).9cu3Q|-in&lt;EumLIJE|2vWv l /li1 &lt;:&gt;n: 5+ 2j+730x 26,52   http</slot>
  <slot end="1050" start="1020">Sande-n: Algorilhnlcnl m1 .311:  I44Beispiel: Variante des GeburtstagsparadoxonWieviele Gste muss eine Geburtstagsparty im Mittel" haben, damitmindestens zwei Gste den gleichen Geburtstag haben?Gste ln.Elementarereignisse: h E Q : {0364}{l"}.Definiere IndikatorZV I,&gt;_, : l gdw h(i) : Anzahl Paare mit gleichem Geburtstag: X : [L1 31:, 1U.ElXl:El2 2 MP2 2 ElIi/l1:11:41 i:lj:i 1: n plil:l:n(nl)'LEgli ] 2 ws3UcuEx.xH:(UELOH-E1-7VImK).Qcu3Q1-U!&lt;EumLIJE|2vW1 l /li1 &lt;:&gt;n:5+ zj+730z2fx52   http</slot>
  <slot end="1080" start="1050">Sande-n: Algorithmen] im s. 3m:  I44Beispiel: Variante des GeburtstagsparadoxonWieviele Gste muss eine Geburtstagsparty im Mittel haben, damitmindestens zwei Gste den gleichen Geburtstag haben?Gste ln.Elementarereignisse: h E Q : {0364}{]"}.Definiere Indikat0rZV I,&gt;_,' : l gdw h(i) : Anzahl Paare mit gleichem Geburtstag: X : [L1 312411,].Il Il Il llElXl:El2 2 MP2 2 ElIi/li:lj:i+l i:lj:i 1" n(nl) l: H): 1.. :l : fELZQI L ] 2 am3UcuEx.xH:(UELOH-E1-7VImU.Qcu3Q|-m&lt;EumLIJE|2vWi l /li1 &lt;:&gt;n: 5+ zj+730x 26,52   http</slot>
  <slot end="1110" start="1080">Sandcrs: Algorithmen I im s. 3m:  I44Beispiel: Variante des GeburtstagsparadoxonWieviele Gste muss eine Geburtstagsparty im Mittel" haben, damitmindestens zwei Gste den gleichen Geburtstag haben?Gste ln.Elementarereignisse: h G Q : {0364}{l"}.Definiere Indikator-ZV I,&gt;_/ : l gdw h(i) : Anzahl Paare mit gleichem Geburtstag: X : [L1 2552411,].ElXl:El2 2 MP2 2 ElIi/li:lj:i+l i:lj:i 1: n plil:l:n(nl)'L121; L ] 2 3653UcuE-%x'43(UELOH-E1-7VImU.Qcu3Q|-VI&lt;EumLIJE':.vWi l li1 &lt;:&gt;n:5+\l2j+730:2652   http</slot>
  <slot end="1140" start="1110">Szindcrs: Algorithmen] m m w:  I44Beispiel: Variante des GeburtstagsparadoxonWieviele Gste muss eine Geburtstagsparty im Mittel" haben, damitmindestens zwei Gste den gleichen Geburtstag haben?Gste ln.Elementarereignisse: h E Q : {0364}{l"}.Definiere Indikator-ZV Igj : l gdw h(i) : Anzahl Paare mit gleichem Geburtstag: X : [L1 272415.I1 I1 I! I1ElXl:El2 2 MP2 2 ElIi/li:lj:i+l 1:112 1" n(nl) l: H) 1.. :l : fFI i i 2 3653UcuEx.x'43(UELOH-E1-7VImU.Qcu3Q|-in&lt;EumLIJE':.vWi l /li1 &lt;:&gt;n: 5+ zj+730x 26,52   http</slot>
  <slot end="1170" start="1140">Sandcrs: Algorithmen] mi a. m:  I44Beispiel: Variante des GeburtstagsparadoxonWieviele Gste muss eine Geburtstagsparty im Mittel" haben, damitmindestens zwei Gste den gleichen Geburtstag haben?Gste ln.Elementarereignisse: h G Q : {0364}{l"}.Definiere IndikatorZV 1,7 : l gdw h(i) : Anzahl Paare mit gleichem Geburtstag: X : [L1 272414,.I! I1 I1 I1ElXl:El2 2 1111:2 2 Ellu]i:lj:i+l i:lj:i 1" n(nl) l: H) 1.. :l : fFI i i 2 3653Ucu3;-%xH:(UELOH-E1-7V1mU.9cu3Q|-m&lt;EumLIJE|2vWv l l li1 &lt;:&gt;n : + zj+730x 26,52   http</slot>
  <slot end="1200" start="1170">Szindcrs: Algorithmen] m. a. m:  I44Beispiel: Variante des GeburtstagsparadoxonWieviele Gste muss eine Geburtstagsparty im Mittel" haben, damitmindestens zwei Gste den gleichen Geburtstag haben?Gste ln.Elementarereignisse: I1 G Q : {0364}{]""}.Definiere Indikator-ZV 1,, : l gdw h(i) : Anzahl Paare mit gleichem Geburtstag: X : [L1 2552411,].IT IT I! ITElXl:El2 2 MP2 2 ElIi/li:lj:i+l i:lj:i 1" n(nl) l: H): 1.. :l : fFI i i 2 3653Ucu3;-%xH:(UELOH-E1-7V1mU.9cu3Q|-m&lt;EumLIJE|2vWi l /li1 &lt;:&gt;n:5+ zj+730z2fx52   http</slot>
  <slot end="1230" start="1200">Szindcrs: Algorilhnlcn] m1 um:  144Beispiel: Variante des GeburtstagsparadoxonWieviele Gste muss eine Geburtstagsparty im Mittel" haben, damitmindestens zwei Gste den gleichen Geburtstag haben?Gste ln.Elementarereignisse: h E Q : {0364}{]"}.Definiere Indikator-ZV I,&gt;_/ : l gdw h(i) : Anzahl Paare mit gleichem Geburtstag: X : 27:1 272415.IT IT I! I!ElXl:El2 2 MP2 2 ElIi/l1:11:41 i:lj:i 1" n(nl) l: H) 1.. :l : f121; L ] 2 3653UcuE-%xH:fUELOH-E1-7VImU.9cu3Q|-in&lt;EumLIJE|2vW1 l /li1 &lt;:&gt;n: K5+ 2j+730x 26,52   http</slot>
  <slot end="1260" start="1230">Szindcrs: Algorithmen] m1 .311:  I44Beispiel: Variante des GeburtstagsparadoxonWieviele Gste muss eine Geburtstagsparty im Mittel" haben, damitmindestens zwei Gste den gleichen Geburtstag haben?Gste ln.Elementarereignisse: h E Q : {0364}{]"}.Definiere Indikator-ZV 1,7 : l gdw h(i) : Anzahl Paare mit gleichem Geburtstag: X : [L1 2552411,].I! I1 I! I1ElXl:El2 2 1111:2 2 ElIi/i1:11:41 i:lj:i 1 n(nl) l: H) 1.. :l : fELZQI L ] 2 3&amp;3UcuEx.xH:fUELOH-E1-7VImK).Qcu3Q|-in&lt;EumLIJE':.vWi l /li1 &lt;:&gt;n: K5+ 2j+730x 26,52   http</slot>
  <slot end="1290" start="1260">Snden: Algorilhnlcnl m  Juli  I44Beispiel: Variante des GeburtstagsparadoxonWieviele Gste muss eine Geburtstagsparty im Mittel haben, damitmindestens zwei Gste den gleichen Geburtstag haben?Gste ln.Elementarereignisse: I1 E Q : {0364}{l"}.Definiere Indikator-ZV 1,7 : l gdw h(i) : Anzahl Paare mit gleichem Geburtstag: X : [L1 272415.ElXl:El2 2 MP2 2 ElIi/li:lj:i+l i:lj:i 1: n Pb:l:n(nl)'LEgli ] 2 ws3UcuE-%xH:fUELOH-E1-7VImU.Qcu3Q|-U)&lt;EumLIJE|2vWi l /li1 &lt;:&gt;n: 5+ 2j+730x 26,52   http</slot>
  <slot end="1320" start="1290">Sandcrs: Algorithmen] m1 a wir  I44Beispiel: Variante des GeburtstagsparadoxonWieviele Gste muss eine Geburtstagsparty im Mittel haben, damitmindestens zwei Gste den gleichen Geburtstag haben?Gste ln.Elementarereignisse: h E Q : {0364}{l"}.Definiere IndikatorZV I,&gt;_/ : l gdw h(i) : Anzahl Paare mit gleichem Geburtstag: X : [L1 272415.I1 I1 I1 I1ElXl:El2 2 MP2 2 ElIi/l1:11:41 i:lj:i 1" n(nl) l: H) 1.. :l : f121; i i 2 3653Ucu3;*4xH:(UELOH-Eh7V1mK).9cu3Q|-in&lt;EumLIJE|2vWi l /li1 &lt;:&gt;n: 5+ zj+730x 26,52   http</slot>
  <slot end="1350" start="1320">Snden: Algorilhnlenl mi a. 3m:  I44Beispiel: Variante des GeburtstagsparadoxonWieviele Gste muss eine Geburtstagsparty im Mittel" haben, damitmindestens zwei Gste den gleichen Geburtstag haben?Gste ln.Elementarereignisse: h E Q : {0364}{]"}.Definiere Indikator-ZV I,&gt;_/ : l gdw h(i) : Anzahl Paare mit gleichem Geburtstag: X : [L1 zj:1.I! I1 I1 I1ElXl:El2 2 MP2 2 ElIi/li:lj:i+l i:lj:i 1" n(nl) l: H) 1.. :l : fFI i i 2 3653UcuE-%xH:fUELOH-E1-7VImU.9cu3Q|-in&lt;EumLIJE|2vWv l /li1 &lt;:&gt;n:5+ 2j+730x 26,52   http</slot>
  <slot end="1380" start="1350">Szmdcrs: Algorithmen] im x w:  I44Beispiel: Variante des GeburtstagsparadoxonWieviele Gste muss eine Geburtstagsparty im Mittel" haben, damitmindestens zwei Gste den gleichen Geburtstag haben?Gste ln.Elementarereignisse: I1 E Q : {0364}{l"}.Definiere Indikator-ZV 1,&gt;_,' : l gdw h(i) : Anzahl Paare mit gleichem Geburtstag: X : 27:1 37:, 1U.I! I1 l1 I!EiXFEiZ 2 1111:2 2 Eilu]i:lj:i+l i:lj:i+l" n n l) l: H): 1.. :l : fFI i i 2 3653Ucu3;-%xH:(UELOH-E1-7V1mU.9cu3Q|-m&lt;EumLIJE|2vWi l / li1 &lt;:&gt;n : + 2j+730x 26,52   http</slot>
  <slot end="1410" start="1380">Snden: Algorithmen! m1  w:  I44Beispiel: Variante des GeburtstagsparadoxonWieviele Gste muss eine Geburtstagsparty im Mittel" haben, damitmindestens zwei Gste den gleichen Geburtstag haben?Gste ln.Elementarereignisse: h E Q : {0364}{l"}.Definiere Indikator-ZV 1,, : l gdw h(i) : Anzahl Paare mit gleichem Geburtstag: X : 27:1 272415.EiXFEiZ 2 MP2 2 Eilij]1:11:41 1:112 1: n plil:l:n(nl)'LELZQI [ ] 2 3m3Ucut54xH:(UELOH-E1-7V1mK).9cu3Q|-m&lt;EumLIJE|2vWi l li1 &lt;:&gt;n:+1/27+730x 26,52   http</slot>
  <slot end="1440" start="1410">Sundcrs: Algorithmen] mi w. 2m:  I44Beispiel: Variante des GeburtstagsparadoxonWieviele Gste muss eine Geburtstagsparty im Mittel" haben, damitmindestens zwei Gste den gleichen Geburtstag haben?Gste ln.Elementarereignisse: I1 E Q : {0364}{l"}.Definiere IndikatorZV1_, : l gdw h(i) : Anzahl Paare mit gleichem Geburtstag: X : [L1 312411,].ElXFElZ  1i1]:2  Ellijll:lj:l+l l:lj:l l "  nimm;glgligqy 2 3653UcuE-%xH:(UELOH-E1-7V1mK).9cu3Q|-m&lt;EumLIJE|2vWi l /li1 &lt;:&gt;n: 5+ 2j+730x 26,52   http</slot>
  <slot end="1470" start="1440">Snden: Algorithmen] im  w:  I44Beispiel: Variante des GeburtstagsparadoxonWieviele Gste muss eine Geburtstagsparty im Mittel haben, damitmindestens zwei Gste den gleichen Geburtstag haben?Gste ln.Elementarereignisse: I1 E Q : {0364}{l"}.Definiere Indikat0rZV I,&gt;_/ : l gdw h(i) : Anzahl Paare mit gleichem Geburtstag: X : 27:1 2552411,].ElXl:El2 2 1111:2 2 Ellij]1:11:41 1:112 1: n PIi.:l:n(nl)'L21; i i 2 3653UcuE4xH:(UELOH-E1-7VImU.9cu3Q|-m&lt;EumLIJE|2vWi l li1 &lt;:&gt;n:5+t/2j+730: 26,52   http</slot>
  <slot end="1500" start="1470">Szindc-rs: Algorithmen] \1.l\ m w:  I45Mehr zum GeburtstagsparadoxonStandardfomulierung:Ab wann lohnt es sich zu wetten, dass es zwei Gste mit gleichemGeburtstag gibt? Etwas komplizierter. Antwort: n 2 23Verallgemeinerung: Jahreslnge m : Hashtabelle der Gre m:eine zufllige Hashfunktion h: ln &gt; 0m  l ist nur dann mit1vernnftiger Wahrscheinlichkeit perfekt wenn m : QM).Riesige Platzverschwendung.3UcuE3xH:fUELOH-.51-7VImK).Qcu3Q|-m&lt;EumLIJE|2vWhttp   </slot>
  <slot end="1530" start="1500">Snden: Algorithmen] IJK x wir  I45Mehr zum GeburtstagsparadoxonStandardfomulierung:Ab wann lohnt es sich zu wetten, dass es zwei Gste mit gleichemGeburtstag gibt? Etwas komplizierter. Antwort: n 2 23Verallgemeinerung: Jahreslnge m : Hashtabelle der Gre m:eine zufllige Hashfunktion h: ln &gt; 0m  l ist nur dann mitvernnftiger Wahrscheinlichkeit perfekt wenn m : QUIZ).Riesige Platzverschwendung.5UcuE3xH:fUEl-OH-E1-7V1mU.9cu3Q|-m&lt;EumLIJE|2vWhttp   </slot>
  <slot end="1560" start="1530">Szmdcrs: Algorithmen] mi s. w:  [45Mehr zum GeburtstagsparadoxonStandardfomulierung:Ab wann lohnt es sich zu wetten, dass es zwei Gste mit gleichemGeburtstag gibt? Etwas komplizierter. Antwort: n 2 23Verallgemeinerung: Jahreslnge m : Hashtabelle der Gre m:eine zufllige Hashfunktion h: ln &gt; 0m  l ist nur dann mit7vernnftiger Wahrscheinlichkeit perfekt wenn m : QM).Riesige Platzverschwendung.5UcuE-4xH:fUEl-OH-.51-7VImU.9cu3Q|-m&lt;EumLIJE':.vWhttp   </slot>
  <slot end="1590" start="1560">Snden: Algorithmen] m1 a. m1:  I44Beispiel: Variante des GeburtstagsparadoxonWieviele Gste muss eine Geburtstagsparty im Mittel haben, damitmindestens zwei Gste den gleichen Geburtstag haben?Gste ln.Elementarereignisse: I1 E Q : {0364}{]"}.Definiere Indikator-ZV I,&gt;_, : l gdw h(i) : Anzahl Paare mit gleichem Geburtstag: X : [L1 312411,].VI Il Il IlElXl:El2 2 MP2 2 ElIi/l1:11:41 1:112 1 n(nl) l: H) 1.. :l : fELZQI L ] 2 33UcuE-%xH:fUELOH-E1-7VImU.Qcu3Q1-in&lt;EumLIJE|2vWv l /li1 &lt;:&gt;n: 5+ zj+730x 26,52   http</slot>
  <slot end="1620" start="1590">Szindcrs: Algorithmen] im .5 w:  I44Beispiel: Variante des GeburtstagsparadoxonWieviele Gste muss eine Geburtstagsparty im Mittel" haben, damitmindestens zwei Gste den gleichen Geburtstag haben?Gste ln.Elementarereignisse: h E Q : {0364}{]"}.Definiere Indikator-ZV 1,, : l gdw h(i) : Anzahl Paare mit gleichem Geburtstag: X : [L1 31:, 1U.ElXl:El2 2 MP2 2 Ellij]i:lj:i+l i:lj:i 1: n PIIH:l:n(nl)'LELZQI [ ] 2 3a3UcuEx.xH:(UELOH-E1-7V1mK).9cu3Q|-m&lt;EumLIJE|2vWi l li1 &lt;:&gt;n:5+\l2j+730m2652   http</slot>
  <slot end="1650" start="1620">Snden: Algorithmen] m. a. Vlli  I44Beispiel: Variante des GeburtstagsparadoxonWieviele Gste muss eine Geburtstagsparty im Mittel" haben, damitmindestens zwei Gste den gleichen Geburtstag haben?Gste ln.Elementarereignisse: h E Q : {0364}{]"}.Definiere Indikator-ZV 1,7 : l gdw h(i) : Anzahl Paare mit gleichem Geburtstag: X : 27:1 2552411,].ElXFEli  1ij]:  Ellijll:lj:l+l l:lj:l l "  nimm;glglugqy 2 3653Ucu3;4xH:fUELOH-E1-7V1mK).9cu3Q|-m&lt;EumLIJE|2vWi l li1 &lt;:&gt;n:5+tl2j+730:2652   http</slot>
  <slot end="1680" start="1650">Szmdcrs: Algorilhnlcn] m1 a wir  I44Beispiel: Variante des GeburtstagsparadoxonWieviele Gste muss eine Geburtstagsparty im Mittel" haben, damitmindestens zwei Gste den gleichen Geburtstag haben?Gste ln.Elementarereignisse: h E Q : {0364}{]"}.Definiere Indikator-ZV I,&gt;_, : l gdw h(i) : Anzahl Paare mit gleichem Geburtstag: X : 27:1 272415.ElXl:El2 2 MP2 2 ElIi/l1:11:41 i:lj:i 1: n Ph:l:n(nl)'LELZQI [ ] 2 am3UcuE-%xH:fUELOH-E1-7VImU.Qcu3Q|-in&lt;EumLIJE|2vW1 l li1 &lt;:&gt;n:5+t/2j+730: 26,52   http</slot>
  <slot end="1710" start="1680">Snden: AIgUIiIhHJc-nl m.  wir  I44Beispiel: Variante des GeburtstagsparadoxonWieviele Gste muss eine Geburtstagsparty im Mittel haben, damitmindestens zwei Gste den gleichen Geburtstag haben?Gste ln.Elementarereignisse: h E Q : {0364}{l"}.Definiere Indikator-ZV 1U : l gdw h(i) : Anzahl Paare mit gleichem Geburtstag: X : 27:1 312411,].ElXFEli  1ij]:  Ellij]l:lj:l+l l:lj:l l "  nimm;glgligqy 2 3653UcuEx.xH:(UELOH-E1-7V1mU.9cu3Q|-m&lt;EumLIJE|2vWi l / li1 &lt;:&gt;n: + 2j+730m 26,52   http</slot>
  <slot end="1740" start="1710">|-m&lt;EumLIJEl:vW Sandcrs: Algorithmen] m a. w:  I43Etwas Wahrscheinlichkeitstheoriefr den HausgebrauchG)HasnBerspielHashFunktionen{()../n  l Ereignisse: Teilmengen von Q Q: : {l1 E Q : /1(ll : M21}py :Wahrscheinlichkeit von x 6 Q. 2x11, : l !Gleichverteilung: p, :  12 : m K : ZxEE px lf 6x42 : l,Zufallsvariable (ZV) X0 : Q &gt; R X : {U E M : Im) : 0} .0-1-Zufallsvariable (Indikator-ZV) I : Q a {t}, 1}Erwartungswert ElXo] : 2.59 pv\.X(_v) E X : Linearitt des Erwartungswerts: ElX + Y] : ElXl +ElYlElementarereignisse Q3Ucu.5*4xH:fUELOH-E1-7VImU.9cu3Q http</slot>
  <slot end="1770" start="1740">|-m&lt;EumLIJE|2vW Snden: Algorithmen] m am]:  14hAnalyse fr zufllige Hash-FunktionenSatz 1. Vk: die erwartete Anzahl kollidier- f s ender Elemente ist O(l)falls  : O(m).  Beweis. Fr festen Schlssel k deniere Kollisionslnge XX2: \I[h(k)]| : He e M :/1(e) : h(k)} l mitM : {e E M: key(e) 75 k}.Betrachte die (H ZV X? : l fr h(e) : h(k), e 6 M und Xg : 0 sonst.Etx] Elzxe] 212m1 2m u K"eEM eEM eEM:o(1)Das gilt unabhngig von der Eingabe M. 3Ucut5-%xH:fUELu?E1-7VI3.9cu3FQ.3s</slot>
  <slot end="1800" start="1770">|-m&lt;EumLIJE|2vW    Sandcrs: Algorithmen] m AJHH  I41:Analyse fr zufllige Hash-FunktionenSatz 1. Vk : die erwartete Anzahl kollidier- f '31] O  )? &gt;t[h(k)JenderElememe ist O(l)f2zlls  : O(m).  k  )Q3 Beweis. Fr festen Schlssel k deniere Kollisionslnge XXI:I[/1(k)]\: He E M : /1(e) : I1(k)} l mitM : {e E M: key(e) 3 k}.Betrachte die (H ZV X? : l fr h(e) : h(k), e e M und Xg : 0 sonst.ElX] E[ZXe] 212m1 2m u K"eEM eEM eEM:o(1)Das gilt unabhngig von der Eingabe M. 3UcuE4x'43fUELu?E1-7VI3.Qcu3FQ.3s</slot>
  <slot end="1830" start="1800">|-m&lt;umLIJE':.vW Snden: Algorithmen] Ln s. w:T ZAnalyseinserti c i: konstante Zeitremoveik]: O(Listenlnge)find(/&lt;] : O(Listenlnge)*r\i&gt;2:3&lt;&gt;&lt;&gt; Aber wie lang werden die Listen?  &gt;h(k. S&gt;Schlechtester Fall: OMi) ;. . \" / zBesser wenn wir genug Chaos anrichten? / t 95cut5x.xH:(UEl-OH-E1-7VImUQcu3Qhttp: </slot>
  <slot end="1860" start="1830">|-m&lt;EumLIJE|2.vW Sandcrs: Algorithmen] m .5 w:Analyseinsert( U i: konstante Zeitremove(k1: O(Listenlnge)find(/&lt;] : O(Listenlnge)Aber wie lang werden die Listen?Schlechtester Fall: O( iMi)Besser wenn wir genug Chaos anrichten?T Zt&gt;&gt;&lt;&gt;&lt;&gt;wzooxnukn;.&gt;[9 3UcuEx.xH:(UELOH-E1-7VImU.Qcu3Qhttp: </slot>
  <slot end="1890" start="1860">|-m&lt;EumLIJE|2.vW Snden: Algorithmen] \Li\ 33.1111;Analyseinsem U i: konstante Zeitremove(k1: O(Listenlnge)frnd(/&lt;] : O(Listenlnge)Aber wie lang werden die Listen?Schlechtester Fall: OMi)Besser wenn wir genug Chaos anrichten?dT z/6\ : y O f i&gt;o&gt;t|hrkiii kO""  &lt;.&gt;\\ h, f g5&gt;\\M  "i/ t g&gt;3UcuEx.x'43(UELOH-E1-7VImU.Qcu3Qhttp: </slot>
  <slot end="1920" start="1890">|-m&lt;EumLIJE|2vW  Sandcrs: Algorithmen] m .\ w:  14hAnalyse fr zufllige Hash-Funktionen/;=\.\ i Satz 1. Vk : die erwartete Anzahl kollidier- 5 O  &lt;3  ygmhqjfo&lt;&gt;toBeweis. Fr festen Schlssel k deniere Kollisionslnge XXI:I[/1(k)]\: He E M : h(e) : I1(k)} l mitM : {e E M: key(e) 75 k}.ender Elemente ist O(l)falls  : O(m).  Betrachte die (H ZV X9 : l fr h(e) : h(k), e e M und Xg : 0 sonst.Elx] Elzx 212m1 mm u ffeEM eEM eEM:o(1)Das gilt unabhngig von der Eingabe M. 3UcuE*4x'43fUELu?E1-7VI3.Qcu3FQ.3s</slot>
  <slot end="1950" start="1920">|-m&lt;EumLIJE':.vW  Szmdcrs: Algorilhnlenl m s w:  I41:Analyse fr zufllige Hash-Funktionen  Satz 1. Vk: die erwartete Anzahl kollidier- 5 9g &lt;3 t1 xgqhq]fo&lt;&gt;toBeweis. Fr festen Schlssel k deniere Kollisionslnge XX :: \I[I1(k)]| : He e M : /1(e) : l1(k)} l mitM : {e E M: key(e) 75 k}.ender Elemente ist O(l)f2zlls  : O(m). E Betrachte die (H ZV X? : l fr h(e) : h(k), e e M und Xg : 0 sonst.ElX] Elzxe] 212m1 2mm u ffeEM eEM eEM:o(1)Das gilt unabhngig von der Eingabe M. 3UcuEx.x'43(UELu?E1-7VI3.Qcu3FQ.3s</slot>
  <slot end="1980" start="1950">|-m&lt;EumLIJE|2vW Szinders: Algorithmen] m n. 3m:  I41:Analyse fr zufllige Hash-Funktionen/:.\  Satz 1. Vk: die erwartete Anzahl kollidier- f O  z:  31x3 &gt;1[h(k)]enderElenleme ist O( l)falls  : O(m). E z  Ex)\. r g Beweis. Fr festen Schlssel k deniere Kollisionslnge XXI:I[/1(k)]\: He E M : /1(e) : /1(k)} l mitM : {e E M: key(e) 75 k}.Betrachte die (H ZV X? : l fr h(e) : h(k), e e M und Xg : 0 sonst.ElX] Elzx 212m1 2m u K"eEM eEM eEM:o(1)Das gilt unabhngig von der Eingabe M. 3Ucu3;x.xH:(UELu?E1-7V13.9cu3FQ.3s</slot>
  <slot end="2010" start="1980">|-m&lt;EumLIJE|2vW Sunders: Algorithmen] m s. w:  I41:Analyse fr zufllige Hash-Funktionen/\ " Satz 1. Vk: die erwartete Anzahl kollidier- 5 O  &lt;3 t1 yjhq]fo&lt;&gt;toBeweis. Fr festen Schlssel k deniere Kollisionslnge XX :: \I[h(k)]| : He e M : h(e) : I1(k)} l mitM : {e E M: key(e) 75 k}.enderElenleme ist O(l)falls  : O(m).  Betrachte die (H ZV X9 : l fr h(e) : h(k), e e M und Xg : 0 sonst.Elx] Elzxe] 212m1 2m u ffeEM eEM eEM:o(1)Das gilt unabhngig von der Eingabe M. 3UcuE-%xH:(UELu?E1-7V13.9cu3FQ.3s</slot>
  <slot end="2040" start="2010">|-m&lt;EumLIJE':.vW Szinders: Algorithmen] mx 5.3/1:  14l:Analyse fr zufllige Hash-Funktionen__ n kg?Satz 1. Vk : die erwartete Anzahl kollidier- v s enderElenleme ist O(l)falls  : O(m).  Beweis. Fr festen Schlssel k deniere Kollisionslnge XX :: \I[h(k)]| : He e M :h(e) :I1(k)}| mitM : {e E M: key(e) 75 k}.Betrachte die (H ZV X9 : l fr h(e) : h(k), e e M und Xg : 0 sonst.Elx] Elzx 212m1 21m u K"eEM eEM eEM:o(1)Das gilt unabhngig von der Eingabe M. 3Ucut5*4xH:fUELu?E1-7VI3.9cu3FQ.3s</slot>
  <slot end="2070" start="2040">|-m&lt;EumLIJE|2vW Szmdcrs: Algorithmen] Ln x w:  I41:Analyse fr zufllige Hash-Funktionen/"?':x \ n Satz 1. Vk: die erwartete Anzahl kollidier- j  &lt;3  gggguglqjender Elemente ixI O( l ) falls  : O(m).  5)&lt;&gt;t_oBeweis. Fr festen Schlssel k deniere Kollisionslnge XXI:I[/1(k)]\: He E M : /1(e) : I1(k)} l mitM : {e E M: key(e) 75 k}. Betrachte die (H ZV X9 : l fr h(e) : h(k), e 6 M und Xg : 0 sonst.ElX] Elzx 212m1 21m u K"eEM eEM eEM:o(1)Das gilt unabhngig von der Eingabe M. 3Ucu3;x.xH:(UELu?E1-7V13.9cu3FQ.5s</slot>
  <slot end="2100" start="2070">|-m&lt;EumLIJE|2vW Szinders: Algorithmen] m z, w:  14hAnalyse fr zufllige Hash-Funktionen/'f: \ 5)Satz 1. Vk: die erwartete Anzahl kollidier- 5 O  &lt;3  yjgqq]ender Elemente ist O(l)falls  : O(m).  V  5)\. f: Beweis. Fr festen Schlssel k deniere Kollisionslnge XX :: \I[h(k)]| : He e M : l1(e) : /1(k)} l mitM : {e E M: key(e) 75 k}.Betrachte die (H ZV X9 : l fr h(e) : h(k), e 6 M und Xg : 0 sonst.Elx] Elzxe] 212m1 2m u K"eEM eEM eEM:o(1)Das gilt unabhngig von der Eingabe M. 3Ucu3;x.xH:(UELu?Eh7V13.9cu3FQ.5s</slot>
  <slot end="2130" start="2100">|-m&lt;EumLIJE|2vW  Szindcrs: Algorithmen] m s w:  14hAnalyse fr zufllige Hash-Funktionen \  S:Satz 1. Vk: die erwartete Anzahl kollidier- j O  z:  yj&gt;&gt;t[h(k)]enderElememe ist O(l)falls  : O(m).  V  E,\ r f: Beweis. Fr festen Schlssel k deniere Kollisionslnge XX :: \I[I1(k)]| : He e M : /1(e) :I1(k)} l mitM : {e E M: key(e) 75 k}.Betrachte die (H ZV X? : l fr h(e) : h(k), e 6 M und Xg : 0 sonst.Elx] Elzx 212m1 2m u ffeEM eEM eEM:o(1)Das gilt unabhngig von der Eingabe M. 3UcuE4xH:(UELu?E1-7VI3.9cu3FQ.5s</slot>
  <slot end="2160" start="2130">|-m&lt;EumLIJE':.vW Sandcrs: Algorithmen! m s w:  I41:Analyse fr zufllige Hash-Funktionen/5\  Satz 1. Vk : die erwartete Anzahl kollidier- ;IO &lt;3  gygguulq]fo&lt;&gt;toBeweis. Fr festen Schlssel k deniere Kollisionslnge XX::\I[I1(k)]|: He e M : h(e) :h(k)} l mitM : {e E M: key(e) 75 k}.ender Elemente ist O(l)f2zlls  : O(m).  Betrachte die (H ZV X? : l fr h(e) : h(k), e e M und Xg : 0 sonst.am Elzxe] 212m1 mm u f?eEM eEM eEM:o(1)Das gilt unabhngig von der Eingabe M. 3UcuE4x'43(UELu?E1-7VI3.Qcu3FQ.3s</slot>
  <slot end="2190" start="2160">|-m&lt;EumLIJE|2vW Snden: Algorithmen] m .\ w: I41:Analyse fr zufllige Hash-Funktionen Satz 1. Vk: die erwartete Anzahl kollidier- v s enderElenleme ist O(l)f2zlls  : O(m).  Beweis. Fr festen Schlssel k deniere Kollisionslnge XX :: \I[h(k)]| : He e M : h(e) : l1(k)} l mitM : {e E M: key(e) 75 k}.Betrachte die (H ZV X9 : l fr h(e) : h(k), e e M und Xg : 0 sonst. &gt;t[h(k) Je)o&lt;&gt;.&lt;.&gt;ElX] Elzx 212m1 Zum u K"eEM eEM eEM:o(1)Das gilt unabhngig von der Eingabe M. 3UcuEx.xH:(UELu?E1-7V13.9cu3FQ.3s</slot>
  <slot end="2220" start="2190">|-m&lt;EumLIJE|2vW Sandcrs: Algorithmen] m a w:  I41:Analyse fr zufllige Hash-Funktionen/"?ijx"\ n Satz 1. Vk: die erwartete Anzahl kollidier- j 9g &lt;3  gybqhaq]fo&lt;&gt;toBeweis. Fr festen Schlssel k deniere Kollisionslnge XX :: |I[h(k)]| : He E M : /1(e) : /1(k)} l mitM : {e E M: key(e) 75 k}.enderElememe ist O(l)f2zlls  : O(m). E Betrachte die (H ZV X? : l fr h(e) : h(k), e e M und Xg : 0 sonst.Etx] EWZXP] 212m1 2m u ffeEM eEM eEM:o(1)Das gilt unabhngig von der Eingabe M. 3Ucu3;4xH:(UELu?Eh7VI3.9cu3FQ.5z</slot>
  <slot end="2250" start="2220">Snden: Algorithmen] \l.l\ w w:  I47Zufllige Hash-Funktionen?Naive Implementierung: ein Tabelleneintrag pro Schlssel.w meist zu teuerWeniger naive Lsungen: kompliziert, immer noch viel Platz.w meist unsinnigZufllige Schlssel?w unrealistisch3UcuE3x'43(UELOH-E1-7VImU.Qcu3Q|-m&lt;EumLIJE|2.vWhttp   </slot>
  <slot end="2280" start="2250">Snden: Algorilhnlcnl \l.l\ x w:  I47Zufllige Hash-Funktionen?Naive Implementierung: ein Tabelleneintrag pro Schlssel.w meist zu teuerWeniger naive Lsungen: kompliziert, immer noch viel Platz.w meist unsinnigZufllige Schlssel?w unrealistisch3UcuE-4xH:(UELOH-E1-7VImU.Qcu3Q|-m&lt;EumLIJE|2vWhttp   </slot>
  <slot end="2310" start="2280">Szmdcrs: Algorilhnlcnl \l.l\ a w:  I47Zufllige Hash-Funktionen?Naive Implementierung: ein Tabelleneintrag pro Schlssel.w meist zu teuerWeniger naive Lsungen: kompliziert, immer noch viel Platz.w meist unsinnigZufllige Schlssel?w unrealistisch3UcuE-4xH:(UELOH-E1-7VImU.Qcu3Q|-m&lt;EumLIJE|2vWhttp   </slot>
  <slot end="2340" start="2310">|-m&lt;EumLIJE|2vW Sandcrs: Algorithmen! m x w:  I43Etwas Wahrscheinlichkeitstheoriefr den HausgebrauchG)HashBeispieiHashFunktionen{()../n  l }Kye43 :{/1{ s2 ; m4) : m21}py :WahrscheinIichkeitvonx E Q. 2x11, : l !Gleichverteilung: p, :  12 : m KP  : ZxEE px K "541 : i!Zufallsvariable (ZV) X0 : Q &gt; R X : {U E M : Im) : )}0-1-Zufallsvariable (Indikator-ZV) 1 : Q a {t}, 1}Erwartungswert E[X(] : 2.59 pv\.X(_v) E X : Linearitt des Erwartungswerts: E[X + Y] : E[X] +E[Y]Elementarereignisse QEreignisse: Teilmengen von Q 3Ucut54xH:fUELu?E1-7V13.9cu3FQ.3s</slot>
  <slot end="2370" start="2340">Snden: Algorithmen] im A w:  I44Beispiel: Variante des GeburtstagsparadoxonWieviele Gste muss eine Geburtstagsparty im Mittel haben, damitmindestens zwei Gste den gleichen Geburtstag haben?Gste ln.Elementarereignisse: h G Q : {0364}{l"}.Definiere Indikator-ZV I,_/ : l gdw h(i) : Anzahl Paare mit gleichem Geburtstag: X : z;;1);'}:1.ElXl:El2 2 1111:2 2 ElIi/ii:lj:i+l i:lj:i 1: n plil:l:n(nl)'L121; i i 2 3653Uw3;4xH:fUELOH-Eh7V1mK).Qcu3Q|-m&lt;EumLIJE'.:vWi l /li1 &lt;:&gt;n: 5+ 2j+730x 26,52   http</slot>
  <slot end="2400" start="2370">S.'indcrs: Algorilhnlenl \l.l\ m w:  I47Zufllige Hash-Funktionen?Naive Implementierung: ein Tabelleneintrag pro Schlssel.w meist zu teuerWeniger naive Lsungen: kompliziert, immer noch viel Platz.w meist unsinnigZufllige Schlssel?w unrealistisch3UcuE-4xH:(UELOH-E1-7VImU.Qcu3Q|-m&lt;EumLIJE|2vWhttp   </slot>
  <slot end="2430" start="2400">Sandcrs: Algorithmen] m . w:  I484.2 Universelles HashingIdee: nutze nur bestimmte einfache Hash-FunktionenDenition 1.  Q {0m  UKW isI universellillsfiir alle x, y in Key mitx 7E y und zidilligem l1 E l7mIP Wx) : Im]Satz 2. Theorem 1 gilI zzucrlifilr universelle Familien vonHash-Funkzionen.Beweis. Fr Q :  haben wir immer noch lPiXg : l] : Der Rest geht wie Vorher. i1|-m&lt;EumLIJE|2vW   3UcuE4xH:fUELu?E1-7V13.9cu3FQ.5s</slot>
  <slot end="2460" start="2430">Snden: Algorithmen] m um:  I484.2 Universelles HashingIdee: nutze nur bestimmte einfache Hash-FunktionenDenition 1.  Q {0m  UKW isI universellfallsir alle x, y in Key rnitx 7 y und zLdZilligem h 6 J7,l7m1P V10) : 11m]Satz 2. Theorem 1 gilI zzuchfr universelle Familien vonHash-Ficnkzionen.Beweis. Fr Q :  haben wir immer noch JP[X : l] : Der Rest geht wie vorher. e3UcuE*4xH:fUELOH-E1-7V1mU.9cu3Q|-m&lt;EumLIJE|2vW   http</slot>
  <slot end="2490" start="2460">Sandcrs: Algorithmen! m b. 1m:  I484.2 Universelles HashingIdee: nutze nur bestimmte einfache Hash-FunktionenDenition 1.  Q {0m  UKW isI universellfallslr alle x, y in Key mir x f y und zidlligem l1 E J7,l7mIP im : 11m]Satz 2. Theorem 1 gilI zzucrlifilr universelle Familien vonHasli-Funkzionen.Beweis. Fr Q :  haben wir immer noch JP[Xg : l] : Der Rest geht wie Vorher. i13UcuE3xH:fUELOH-E1-7V1mK).9cu3Q|-m&lt;EumLIJE|2vW   http</slot>
  <slot end="2520" start="2490">Snden: Algorithmen] m _ w:  I484.2 Universelles HashingIdee: nutze nur bestimmte einfache Hash-FunktionenDenition 1.  Q {0m  UKW isI imiverxellfallsir alle x, y in Key mitx 3 y und zicfilligem h E liPi/ib) : li(_\')] :  Satz 2. Theorem 1 gilI ziucrlifiir universelle Familien vonHash-Ficnkzionen.Beweis. Fr Q :  haben wir immer noch JP[Xg : l] : Der Rest geht wie Vorher. i13UcuE3xH:(UELOH-E1-7VImU.9cu3Q|-m&lt;EumLIJE|2vW   http</slot>
  <slot end="2550" start="2520">Szindcrs: Algorithmen] m a. 3m:  I484.2 Universelles HashingIdee: nutze nur bestimmte einfache Hash-FunktionenDenition 1.  Q {0m  UKW isI universellillsfiir alle x, y in Key mitx 75 y und zitfilligem l1 E f,l7m1P V10) : /I(.\'&gt;iSatz 2. Theorem 1 gilI aucrhir imiverxelle Familien vonHaxh-Fimkiionen.Beweis. Fr Q :  haben wir immer noch JP[X : l] : Der Rest geht wie Vorher. i13UcuE3xH:(UELOH-E1-7V1mU.9cu3Q|-m&lt;EumLIJE|2vW   http</slot>
  <slot end="2580" start="2550">|-m&lt;EumLIJE|2vW  Snden: Algorithmen] m s. 1m:  I41:Analyse fr zufllige Hash-Funktionen/':77\\\\ H Satz 1. Vk: die erwartete Anzahl kollidier- 5 s   ygguqaq]fo&lt;&gt;toBeweis. Fr festen Schlssel k deniere Kollisionslnge XX 2: \I[h(k)]| : He e M :/1(e) :I1(k)}| mitM : {e E M: key(e) 75 k}.enderElememe ist O( l)falls  : O(m).  Betrachte die (H ZV X9 : l fr h(e) : h(k), e 6 M und Xg : 0 sonst.Elx] Elzxe] 212m1 2m u K"eEM eEM eEM:o(1)Das gilt unabhngig von der Eingabe M. 3Ucu3;x.xH:(UELu?E1-7V13.9cu3FQ.5s</slot>
  <slot end="2610" start="2580">|-m&lt;EumLIJE|2vW  Snden: Algorithmen] m mm1:  I41:Analyse fr zufllige Hash-FunktionenSatz 1. Vk: die erwartete Anzahl kollidier- 5 9g z:  gjjguqg]ender Elemente ist O( l ) falls  : O(m).  z 5x) r g Beweis. Fr festen Schlssel k deniere Kollisionslnge XX::\I[I1(k)]|: He e M : /1(e) : I1(k)} l mitM : {e E M: key(e) 3 k}.Betrachte die (H ZV X9 : l fr h(e) : h(k), e 6 M und Xg : 0 sonst.Elx] E[ZXe] 212m1 2m u ffeEM eEM eEM:o(1)Das gilt unabhngig von der Eingabe M. 3Ucu3;-%x:(UELu?E1-7V13.9cu3FQ.5s</slot>
  <slot end="2640" start="2610">|-m&lt;EumLIJE|2vW Sandcrs: Algorithmen] m um  14:;Analyse fr zufllige Hash-Funktionen//?':"\ n Satz 1. Vk : die erwartete Anzahl kollidier- f C i: O  )? &gt;t[h(k)JenderElememe ist O(l)f2zlls  : O(m). E 5)&lt;&gt;toBeweis. Fr festen Schlssel k deniere Kollisionslnge XXI:I[/1(k)]\: He E M : /1(e) : /1(k)} l mitM : {e E M: key(e) 75 k}. Betrachte die (H ZV X? : l fr h(e) : h(k), e e M und Xg : 0 sonst.ElX] E[ZXe] 212m1 2m u ffeEM eEM eEM:o(1)Das gilt unabhngig von der Eingabe M. 3Ucu3;x.xH:(UELu?Eh7V13.9cu3FQ.5s</slot>
  <slot end="2670" start="2640">|-m&lt;EumLIJE|2vW Sandcrs: Algorithmen] m a. m:  I41:Analyse fr zufllige Hash-Funktionen Satz 1. Vk : die erwartete Anzahl kollidier- f O AenderElenteme ist O( l)falls  : O(m).  z Beweis. Fr festen Schlssel k deniere Kollisionslnge XXI:I[/1(k)]\: He E M : /1(e) : /1(k)} l mitM : {e E M: key(e) 75 k}.Betrachte die (H ZV X? : l fr h(e) : h(k), e 6 M und Xg : 0 sonst.Elx] Elzxe] 212m1 2m u ffeEM eEM eEM:o(1)Das gilt unabhngig von der Eingabe M. 3UcuE4xH:fUELu?E1-7V13.9cu3FQ.5s</slot>
  <slot end="2700" start="2670">Szindcrs: Algorithmen! im a. Jul:  I484.2 Universelles HashingIdee: nutze nur bestimmte einfache Hash-FunktionenDenition 1.  Q {0m  UKW isI universellfkillxfilr alle x, y in Key miIx 7E y und zufilligem h E l7m1P V10) : 11mlSatz Z. Theorem 1 gilI ziucrhfilr universelle Familien vonHash-Funkzionen.Beweis. Fr Q :  haben wir immer noch JP[X : l] : Der Rest geht wie Vorher. e3UcuE-4xH:fUELOH-.51-7VImK).Qcu3Q|-m&lt;EumLIJE|2vW   http</slot>
  <slot end="2730" start="2700">Sanders: Algorithmen] m xlllll  149Eine einfache universelle Familiem sei eine Primzahl, Key Q {(1,    m  l}kSatz 3. Fr a : (m1.. .  (z/J E {(1, m l}k deniere/1(X) : a&gt;x mod m, H : {In : a e {0m l}k}.H" isI eine universelle Familie von HaXh-FunkIirJnenv *1 X2 V V X3&lt; . l; . + . mod m&gt; = ha(X)a1 62 w a3 _|-m&lt;EumLIJE|2vW   3Ucut74xH:(UELu?E1-7VI3.Qcu3FQ.5s</slot>
  <slot end="2760" start="2730">3. bung  Algorithmen ITwmo Bingmann, Christian SchmzVS8 g " o \::/ v" *" {,1 &lt; u "am Eu: .22 E- 2V Fq sE   </slot>
  <slot end="2790" start="2760">3. bung  Algorithmen ITwmo Bingmann, Christian SchmzI5 g " .0 .\::r ta :&gt;- * I7, &lt; u "am Eu: .22 E- 2V Fq sE   </slot>
  <slot end="2820" start="2790">3. bung  Algorithmen ITwmo Bingmann, Christian SchmzQ8? ..*4  b,esfx {,1 &lt; u "am Eu: .22 E- 2V Fq sE   </slot>
  <slot end="2850" start="2820"> | Amortisierte Analyse  m Beispiel Binrzhler &lt; 2F.U ooo &lt;&gt; o 5m gLIJ eE3 -VI* 5|- C gV sW 52 Timo Bingmunn, Christian SCHUH Fakultt I Inlonnalik E 3 bung  Algonmmen I Inslllul luv Theoretische Hvfovmauk</slot>
  <slot end="2880" start="2850">Amortisierte Analyse Beispiel Binrzhlern Binrzhler: zhle von O bis m   3k E4-1 __'&lt; x.F.U n mlnkrementoperationen 000 &lt;&gt; 0  - H212 001 H 1 g. . . O10 2m Functlon bInary-Incrementm : O11 H 3 1.830 &lt; 130 + 1 H i=o ; N20 100 &lt;&gt; 4 .7_ whiIe1-:2do 101 1-) 5 3111 P4111 +1 .3 e 3 32' Uh j/AFO 2 1 o &lt;-&gt;  1 g1 ie i +1 gV 3Q. 2:53 Tin_|oBingmanmChrislianSchuIz Fakulllirlnlonnalik E3 Ubung - Algonthmen I Insmul Iv Theoretische lnfovmauk</slot>
  <slot end="2910" start="2880">Amortisierte Analyse Beispiel Binrzhlern Binrzhler: zhle von O bis rn   3h "Um g&lt; x.F.U n mlnkrementoperationen 000 &lt;&gt; 0 m I X:Z, .112 001 H 1 g. . 1m Function bInary-Incrementm : 31? H  1.8130 &lt; 130 + 1 H 1:0 1 N20 100 H 4 ._;_ whiIe1-:2do 101 H 5 Q3m F in +1 .3 3 3 5+2 Uh j/FO 2 1 0 &lt;-&gt;  1 gZ i e i + 1 gV gQ. Z3 Tin_|o Bingmann, Christian Schulz Fakultt fr Inmrmalik S3 Ubung - Algonthmen I Inslllul Iv Theoretische Informauk</slot>
  <slot end="2940" start="2910">Beispiel Binrzhler binary-increment001111111001111112|-m&lt;EumLIJE'.:vW   3Uwt5x.x"a:(UELu?E1-7VI5.0cu3FQ.5s4 Tin_|o Bingmunn, Christian Schulz Fakultt fr Inlonnalik3 Ubung - Algonthmen I Inslllul luv Theoretische 1nfovmauk</slot>
  <slot end="2970" start="2940">Amortisierte Analyse Beispiel BinrzhlerII Kostenmodell: Jedes gekippte Bit kostet 1I jedes Bit einzeln Kippen!Operation KostenO00 a 001 1O01 a O10 2010 a 011 1011 a 100 301" 410 k +1cost(i a 1+ 1) 1 + Anzahl derendenden Einsen in bin(i)I-in&lt;EumLIJE'.:vW   3Uwt7x.x"a:(UELu?Eh7VI5.0d)3FQ.5s5 Tinio Bingmann, Christian Schulz Fakultt lr Inlormalik3 Ubung - Algorithmen I Institut iui Theoretische Informatik</slot>
  <slot end="3000" start="2970">Amortisierte Analyse Beispiel BinrzhlerII Kostenmodell: Jedes gekippte Bit kostet 1l jedes Bit einzeln Kippen!Operation Kosten000 a 001 1O01 e 010 2010 a 011 1011 a 100 301" e10 k +1cost(i a 1+ 1) 1 + Anzahl derendenden Einsen in bin(i)|-U!&lt;EumLIJE|2vW   3UwEx.x"a:(UELu?Eh7VI5.Qcu3FQ.5s5 Tinio Bingmunn, Christian Schulz Fakuiti lr Inlormalik3 Ubung - Ngoliihmen I Insmui Iv Theorelische iniovmaiik</slot>
  <slot end="3030" start="3000">Amortisierte Analyse Beispiel BinrzhlerII Kostenmodell: Jedes gekippte Bit kostet 1H jedes Bit einzeln Kippen!Operation Kosten000 a 001 1O01 a O10 2010 a 011 1011 a 100 301" 410 k +1costUa I41) 1 + Anzahl derendenden Einsen in bin(i)|-U)&lt;EumLIJE|2vW   3UcuEx.x'43(UELu?Eh7VI5.Qcu3FQ.3s5 Tin_|o Bingmsnn, Christian Schulz Fakultt lr Iniormaiik3 Ubung - Algorithmen I Insmui Iv Theoretische infovmaiik</slot>
  <slot end="3060" start="3030">Amortisierte Analyse Beispiel Binrzhleru T(m) seien Gesamtkosten fr m Operationenu amortisierten Kosten pro Operation definiert als T(m) mamortisierten Kosten einer Inkrementoperation?a) 0(1) b) O(iog m) c) O(m)|-U)&lt;EumLI-IE|2vW   3Uwt5x.x"a:(UELu?E1-7VI5.Qcu3FQ.5ss Tin_|o Bingmunn, Christian Schulz Fakulli fr Inlormaiik3 Ubung - Ngoliihmen I lnslllul iv Theorellsche informaiik</slot>
  <slot end="3090" start="3060">Amortisierte Analyse Beispiel Binrzhleru T(m) seien Gesamtkosten fr m Operationenu amortisierten Kosten pro Operation definiert als T(m) mamortisierten Kosten einer Inkrementoperation?a) 0(1) b) O(iog m) c) O(m)|-in&lt;EumLI-IE|2vW   3UwEx.x"a:(UELu?E1-7VI5.Qcu3FQ.5ss Tinio Bingmunn, Christian Schulz Fakulli lr Iniormaiik3 Ubung - Ngoliihmen I Insmui ir Theoretische informaiik</slot>
  <slot end="3120" start="3090">Beispiel Binrzhler u \'wV 1, m. I ""\1c71':" 31: Schtze T(m) F1 &lt;3 abOperation Kosten0000 a 0001 13UcuEx.x'43(UELOH-Eh7VImU.Qcu3Q   m  :  f n Bepbachtung (m_Ops): _m 0011 H 0100 3 i0 Jedes mal geknppt x1 x0100 H 0101 1 i1 Jeges zweite ma11l gefoppit V  g  2 1:12:01: &lt;1011000111 1 3' ac g pp 7e 0111 a 1000 4 iV r&lt;m&gt;swv+e+awu S2Eog7:2mW .97 Timo Bingmunn, Christian Schulz Fakultt fr Inlormalik E3 bung  Algomnmen I Insmul w: Theoretische mronnaux</slot>
  <slot end="3150" start="3120"> |1 Be|sp|el Blnarzahler  gm "Elf /."7 1:11 3 121.1: &lt; u w 110x * 1:: Schtze T(m) t l v: ab x  Operation Kosten u:0000 a 0001 1 f6m 0001 H 0010 2 I Beobachtung (m Ops): El | l 0010  0011 1 i0 jedes mal gekippt T  0011 H 0100 3 i1 jedes zweite mal gefoppt  - " '4-g  H  g .12 jedes vierte mal gefoppt L    '  g I0110 A 0111 1 f3 jedes achte mal gefoppl  1 e 0111 a 1000 4  Uh S1i wV T&lt;m&gt;s1v+%+%= 5Zz0gx7:2m iq 4-!0-47 Timo Bingmann, Christian Schulz Fakultt fr lnlormalik E 3 bung  Algomnmen I Insmul w: Tneorenscne lnfovmallk</slot>
  <slot end="3180" start="3150"> |1 Be|sp|el Blnarzahler  cm Aggregatmethode &lt; n Kochrezept: Schtze T(m) direkt ab   Operation Kosten 0000 a 0001 1 (um 0001 Z 0010 2 I Beobachtung (m Ops): El l I 0010  0011 1 i0 jedes mal gekippt Z m 0011 H 0100 3 d1 jedes zweite mal gefoppt Z g '4-g  H  g 12 jedes vierte mal gefoppt Z : j 0110 : 0111 1 i3 jedes achte mal gefoppt Z g; a; 0111 A1000 4  8h gA T(m) &lt; 2 _ O 1 3v Z m  ( ) Qq 4-5J-i7 Timo Bingmunn, Christian Schulz Fakultt fr Inlormalik E 3 bung  Algonthmen I Insmul w: Theoretische jnronnaux</slot>
  <slot end="3210" start="3180">Beispiel Binrzhler BankkontomethodeI Allgemein: t1 .  Im die Laufzeiten der EinzeloperationenB t, Gebhr fr i-te OperationH vorjeder Operation erhlt Algorithmus Gehalt GI alle Operationen mssen aus Gehltern bezahlt werden3UwE3x"a:(UELOH-E1-7VImU.Qcu3Q|-in&lt;EumLIJE|2vW   httpa Tinio Bingmann, Christian Schulz Fakultt tr Inlormatik3 Ubung - Algorithmen I Institut lr Theoretische Informatik</slot>
  <slot end="3240" start="3210">Beispiel Binrzhler BankkontomethodeI finde Gehalt G + Sparstrategie mit T(m) g mGH Binrzhler: G : 2, Strategie:n Zhlvorgang &gt; genau ein Bit auf 1 gesetzt, dies kostet 1 Euro3UwE3x"a:(UELOH-E1-7VImU.Qcu3Q|-m&lt;EumLIJE|2vW   httpg Tin_|o Bingmunn, Christian Schulz Fakultt lr Inlormalik3 Ubung - Ngoltthmen I Insmut lr Theorellsche ihfolmahk</slot>
  <slot end="3270" start="3240">Beispiel Binrzhler BankkontomethodeII finde Gehalt G + Sparstrategie mit T(m) g mGBinrzhler: G : 2, Strategie:n Zhlvorgang &gt; genau ein Bit auf 1 gesetzt, dies kostet 1 Euro3UcuE3x"a:(UELOH-E1-7VImL).0cu3Q|-in&lt;EumLIJE'.:vW   httpg Tinio Bingmunn, Christian Schulz Fakultt lr Intormaiik3 Ubung - Algorithmen I Institut Ir Theoreltsche Informatik</slot>
  <slot end="3300" start="3270">Beispiel Binrzhler BankkontomethodeII finde Gehalt G + Sparstrategie mit T(m) g mGH Binrzhler: G : 2, Strategie:n Zhlvorgang &gt; genau ein Bit auf 1 gesetzt, dies kostet 1 Eurou anderer Euro wird gespart, um Bit auf 0 zu setzenH Analyse:n zum Zeitpunkt i: kmal rcksetzen auf 0 und einmal Bit setzenu finanziert durch k Euro aus dem Konto und 1 Euro Gehaltseingang3UcuE3x:(UELOH-E1-7VImU.Qcu3Q|-m&lt;EumLIJE|2vWhttp   g Tin_|o Bingmunn, Christian Schulz Fakultt lr Inlormalik3 Ubung - Ngoliihmen I lnslllul Iv Theoretische Informatik</slot>
  <slot end="3330" start="3300"> |1 Be|sp|el Blnarzahler  cm Einzelkosten 3:&lt; x.Cost) U rum gLIJ 5 O4 H-3 -5_2 I I =I (U1 | I | | I | | I | | I |  uh 0P g! gV 3W o.a:1o Tim!) Bingmunn, CHSSH Schulz Fakultt I Inormalik E 3 Ubung - Algonthmen I Insmul Iv Theoretische Iniovmauk</slot>
  <slot end="3360" start="3330">   |1 Be|sp|el Blnarzahler _ KIT c:m Summierte Kosten g 2m 3:&lt; T(m)  AfK) I1  gm 1g  gLIJ 8 z e6  1-7g 7 ' E: 5 X { { gh 43*  gv  3, Fl I I h&gt; o.W op .:12 Tillf Bingmann, Chriatian Schulz Fakultt I Inhnnalik s3 Ubung - Algomhmen I Insmul w: Theoretische lnfovmauk</slot>
  <slot end="3390" start="3360"> |1 Beispiel Binrzhler  m T(m)/mg2 E&lt; x.U T(m) n1 (um 5 gLIJ 4 e3 sg 2 --------------------------------------- -- .7; 1 u I I I I I I I I I - 8| nC 0P a)v W 13 Tillf Bingmunn, Christian Schulz Fakulll I Inlonnalik g 3 Ubung - Algonmmen I Insmul Iv Theorensche Informauk</slot>
  <slot end="3420" start="3390"> |1 Beispiel Binrzhler  (f) T(m)/m:2 L,&lt; x.U T(m) n1 (um 5 gLIJ 4 e3 sg 2 --------------------------------------- -- .7; 1 u I I I I I I I I I - 8| nC 0P a)v W 13 Tillf Bingmunn, Chlih Schulz Fakulll I Mfalik g 3 Ubung - Algonmmen I Insmul Iv Theorensche Informauk</slot>
  <slot end="3450" start="3420">Beispiel Hotlist-Datenstruktur wichtige Operationen:n /ookup(Key k) : Datau insert(Key k, Data d)u deIete(Key k)Ziel: Datenstruktur in der Operationen in amortisiert O(2)|-U)&lt;EumLIJEi:vW   3Ucut5x.x"a:(UELu?E1-7VI5.0cu3FQ.5s14 Tillgn Bingmsnn, Christian Schulz Fakultt fr lnlormaiik3 Ubung - Ngoliihmen I Institut iv Theorellsche infovmailk</slot>
  <slot end="3480" start="3450">Beispiel Hotlist-Datenstruktur Lookupwichtige Operationen:I lookup(Key k) : Datan insert(Key k, Data d)n delete(Key k)linear /ookup(Key k) in o(n) /2 Elemente nicht komplett unsortiert \ /|-in&lt;EumLIJE'.:vW   3Uwt7x.x"a:(UELu?E1-7VI5.0cu3FQ.5s15 ringe Bingmunn, Christian Schulz Fakuili fr Inlonnaiik3 Ubung  Algorithmen I Institut iui Theoretische inroimaiix</slot>
  <slot end="3510" start="3480"> . . . 3| Be|sp|el Hotlnst-Datenstruktur  cm Lookup f:&lt; x.iU Iookup(Key k) : Data nm Vorgehen: gm I durchsuche die Hotlist komplett H9n durchsuche das geordnete Array V5 mit binrer Suche e 81h / gj Laufzeit: O('n) + O(Iog n): O(W1) \\ // g\ /V v 3Q. 2:1s "ringe Bingmunmchrislian Schulz Fakulltlrlnlonnalik S 3 Ubung - Algonthmen I Inslllul Iv Theoretische lnfovmauk</slot>
  <slot end="3540" start="3510">Beispiel Hotlist-Datenstruktur LookupIookup(Key k) : DataVorgehen:I durchsuche die Hotlist komplettn durchsuche das geordnete Array V5mit binrer SucheLaufzeit: O( n) + O(Iog n): O(\1)|-m&lt;EumLIJE|2vW   3UwEx.x"a:(UELu?E1-7VI5.Qcu3FQ.5s16 Tingo Bingmunn, Christian Schulz Fakultt fr Inlonnalik3 Ubung - Algonthmen I Inslllul w: Theoretische Informauk</slot>
  <slot end="3570" start="3540">   . . . 3| Beispiel Hotlist-Datenstruktur  cm inserl "1&lt; x.XL) "5II f6m insert(Key k, Data d) ELm Fall A: in Hotlist ist Platz f H9g a nchste freie Position in Hotlist V" in?_ Laufzeit: o(1 ) Z, / U|- *\ / / g1 V / 3V 3 Q.in5-17 Tingo Bingmunn, Chriaan Schulz Fakulll ! Inormalik S3 Ubung - Ngoliihmen I Institut Iv Theoretische infovmaiik</slot>
  <slot end="3600" start="3570">Beispiel Hotlist-Datenstruktur inseriinsert(Key k, Data d)Fall A: in Hotlist ist Platza nchste freie Position in HoilistLaufzeit: 0m i|-m&lt;EumLIJEi:vW   3Ucut5x.x"a:(UELu?E1-7VI3.9cu3FQ.3s17 Tillgo Bingmann, Christian Schulz Fakultt fr lnlormalik3 Ubung - Ngoliihmen I Inslllul iuv Theoretische informailk</slot>
  <slot end="3630" start="3600"> . . . 3| Be|sp|el Hotlnst-Datenstruktur  cm inserl "1&lt; x.e x  I n v; z/nsert(Key k, Data d) rum _. .  . ; e/ El I N Fall B. In Hotllst Ist keIn Platz \ oI sortnereHotlist  / '4-._ . . L CI merge: fuhre sortierte Listen zusammen --_n k erstes Element in neuer Hotlist f;j  (Uh Laufzeit: o( \ T1Iog(V'T7)) + 0m) : O(n)   V gd)C 3V i 3 Q.4-40-11a Tingo BingmanmChrisan Schulz Fakultt fr Inlonnalik S 3 Ubung - Algonmmen I Inslllul Iv Theoretische Infovmauk</slot>
  <slot end="3660" start="3630"> . . . 3| Be|sp|el Hotlnst-Datenstruktur  cm inserl I:&lt;  x. X  I 77 v? z/nsert(Key k, Data d) rul I i Fall B: in Hotlist ist kein Platz \ 5I somere Hotlist  /' '4-.. . . L Cn merge: fuhre sortierte Listen zusammen --_n k erstes Element in neuer Hotlist "GL  (Uh Laufzeit: o( \ T1Iog(V'T7)) + 0m) : 0m)   V gd)2 gV i g D.In0-118 Tin_|o Bingmann, Christian Schulz Fakultt fr Inonnalik S 3 Ubung - Algonmmen I Inslllul luv Theoretische Infovmauk</slot>
  <slot end="3690" start="3660">Beispiel Hotlist-Datenstruktur inserlinsert(Key k, Data d)Fall B: in Hotlist ist kein Platz \I sorttereHotIist  /I merge: fhre sortierte Listen zusammenn k erstes Element in neuer HotlistwnLaufzeit: O(\ T1Iog(V'T7)) + Oin) : O(n)3UcuEx.x:(UELOH-E1-7VImU.Qcu3Q|-tn&lt;EumLIJE|2vW   http18 Tinte Bingmunn, Christian Schulz Fakultt fr Intormatik3 Ubung - Algorithmen I Institut tut Theoretische iniotmaitk</slot>
  <slot end="3720" start="3690">Beispiel Hotlist-Datenstruktur Amortisierungu nach Zusammenfhrung sind   1 Positionen in der Hotlist frein h inserf-Operationen bis zur nchsten Zusammenfhrungu Zusammenfhrung hat Aufwand cnAlso:u spare bei jeder einfachen insert-Operation cdn an| bezahle bei der letzten Operation cn3UwE3x"a:(UELOH-E1-7VImU.Qcu3Q|-m&lt;EumLI-IE|2vW   http19 Tinto Bingmann, Christian Schulz Fakultt lr Inlormalik3 Ubung - Ngoltthmen I Institut w: Theoretische informauk</slot>
  <slot end="3750" start="3720">Beispiel Hotlist-Datenstruktur Amortisierungu nach Zusammenfhrung sind   1 Positionen in der Hotlist frein \ inserf-Operationen bis zur nchsten ZusammenfhrungI Zusammenfhrung hat Aufwand cnAlso:u spare bei jeder einfachen insert-Operation cdn ann bezahle bei der letzten Operation cn3UwE3x"a:(UELOH-E1-7VImU.Qcu3Q|-m&lt;EumLI-IE|2vW   http19 Tinto Bingmann, Christian Schulz Fakultt lr Inlormalik3 Ubung - Ngoliihmen I inslllul lur Theorellsche infovmailk</slot>
  <slot end="3780" start="3750">Beispiel Hotlist-Datenstruktur deletede/ete(Key k): jedes Element bekommt vaIidBitI lookup: suche kn setze vaIid-Bit aufO V5Lschoperationen seltenLaufzeit: O(Vn) + O(Iog n): O(Tn)|-m&lt;EumLI-IE|2vW   3UwEx.x"a:(UELu?E1-7VI3.9cu3FQ.5s2o Tin_|o Bingmunn, Christian Schulz Fakulll lr Inlonnalik3 Ubung - Algonmmen I Inslllul Iv Theoretische mfovmauk</slot>
  <slot end="3810" start="3780">Beispiel Hotlist-Datenstruktur deletedelete(Key k):bei mehr als 0(1) Lsch-Opszwischen zwei ZusammenfhrungenVorgehen hnlich zu inserfn Reorganisation nach owm V5Lschopsn lookup funktioniert noch mitgleicher Laufzeit /Laufzeit: Analyse wie bei inser! \\/3UcuE3x:(UELOH-E1-7VImU.Qcu3Q|-U)&lt;EumLIJE|2vW   http21 TiII_|o Bingmann, Christian Schulz Fakultt fr lnlormalik3 Ubung - Algolllhmen I Insmui w: Theorellsche Informatik</slot>
  <slot end="3840" start="3810">Beispiel Hotlist-Datenstruktur amortisierter Aufwandlookup(Key k): Aufwand in O()insert(Key k): Aufwand amortisiert in O()deIete(Key k): Aufwand amortisiert in O()|-m&lt;EumLIJEi:vW   3Ucut7x.x"a:(UELu?E1-7VI5.0cu3FQ.5s22 Tin_|o Bingmsnn, Christian Schulz Fakuili fr Iniormaiik3 Ubung - Algoliihmen I Institut iur Theorelische Informatik</slot>
  <slot end="3870" start="3840">Unbounded Array Wieviele Speicherzellen brauchtein Unbounded Array gleichzeitigfr n Elemente?u Worst-Case-BetrachtungI es darf eine beliebige Folge von pushBack und popBack Operationenvorausgegangen sein|-m&lt;EumLIJE|2vW   3Uwt5x.x"a:(UELu?E1-7VI.9cu3FQ.5sa) 2n i c c) 4n : cb) 3n i c d) 6n : c23 Tin_|o Bingmunn, Christian Schulz Fakultt fr Inmrmalik3 Ubung - Algorithmen I Insmur Ir Thecrelische iniormaiik</slot>
  <slot end="3900" start="3870">Unbounded Array Wieviele Speicherzellen brauchtein Unbounded Array gleichzeitigfr n Elemente?u Worst-Case-BetrachtungI es darf eine beliebige Folge von pushBack und popBack Operationenvorausgegangen sein|-m&lt;EumLIJE|2vW   3UwEx.x"a:(UELu?E1-7VI3.Qcu3FQ.5sa) 2n i c c) 4n : cb) 3n i c d) 6n : c23 Tingo Bingmunn, Christian Schulz Fakultt fr Inlonnatik3 Ubung - Algorithmen I Institut lr Theoreltsche lnformatlk</slot>
  <slot end="3930" start="3900">Unbounded Array Wieviele Speicherzellen brauchtein Unbounded Array gleichzeitigfr n Elemente?u Worst-Case-Betrachtungl es darf eine beliebige Folge von pushBack und popBack Operationenvorausgegangen sein|-m&lt;EumLIJE|2vW   3UwEx.x"a:(UELu?E1-7VI3.Qcu3FQ.5sa) 2n i c c) 4/7 : cb) 3n i c d) 6n : c23 Tin_|o Bingmunn, Christian Schulz Fakultt fr Inormatik3 Ubung - Algorithmen I Insmur Ir Theorelische inrovmatik</slot>
  <slot end="3960" start="3930">Unbounded Array live! 11 51 5 6 21 5 6 2 11 4 13 8Aufwand bisher:I reallocate), rea11ocate(2), rea11ocate(4) rea11ocate(8)u 8 konstante ZuweisungsoperationenAmortisierte Kosten fr n Einfge-Operationen:3UcuE3x'43(UEl-OH-E1-7VImU.9cu3Qda Trealiocale : 0(77)|-m&lt;EumLIJEF:vW   http24 Tin_|o Bingmunn, Christian Schulx Fakultt fr lnlormalik3 Ubung - Ngoliihmen I Institut lr Theorelische informailk</slot>
  <slot end="3990" start="3960">Unbounded Array live! 11 51 5 6 21 5 6 2 11 4 13 81 5 6 2 11 4 13 8 9n Einfgen bentigt 3(n  1) Speicherzellenu falls maximales n bekannt, ist ein bounded array oft besser3UcuE3x"a:(UEl-OH-E1-7VImUQcu3Q|-tn&lt;EumLIJE'.:vW   http24 Tinto Bingmann, Christian Schulz Fakultt tt Intormatik3 Ubung - lgolithmen I Institut tut Theoretische intotmattk</slot>
  <slot end="4020" start="3990">Unbounded Array live! 11 51 5 6 21 5 6 2 11 4 13 81 5 6 2 11 4 13 8 9n Einfgen bentigt 3(n  1) Speicherzellenu falls maximales n bekannt, ist ein bounded array oft besser3UcuE3x"a:(UEl-OH-E1-7VImUQcu3Q|-m&lt;EumLIJEi:vW   http24 Tin_|o Bingmann, Christian Schulz Fakultt lr Inhrmalik3 Ubung - Ngoliihmen I Insmui Iv Theorelische iniovmauk</slot>
  <slot end="4050" start="4020">Unbounded Array live! 11 51 5 6 21 5 6 2 11 4 13 81 5 6 2 11 4 13 8Warum schrumpft das Array nicht?I die Zukunft nicht bekannt (Stichwort Online-Algorithmus)u folgendes pushBack a erneutes O(n) AnwachsenI Folge von n solcher popBack / pushBack hat Laufzeit O(n2)3UcuE3x"a:(UELOH-.51-7V1m1J.Qcu3Q|-m&lt;EumLIJE':.vW   http24 Tingn Bingmunn, Christian Schulz Fakultt fr Inlonnalik3 Ubung - Algonthmen I Institut Iv Theoretische Vnfovmauk</slot>
  <slot end="4080" start="4050">3| Unbounded Array live!  gV5 e&lt;1: x1 s2  1 5 "51 5 6 2 f5m 1 5 s 2 11 4 13 8 E1 5 e 2 11 l -LIJ gg n nach Einfge und Lschops bis zu 4(n  1) Speicherzellen bentigt u hier hilft auch kein bounded array u verkettete Listen haben genau n Elemente, aber zustzliche Zeiger uh u es gibt nicht eine perfekte Datenstruktur fr alle Anwendungen gi gV    http24 Till_|o Bingmunn, Christian Schulz Fakultt fr lnlonnalik3 Ubung - Algorithmen I Insmul lr Theorelische lnlormallk</slot>
  <slot end="4110" start="4080">3| Unbounded Array live!  gV5 g&lt; x1 g  1 5 3:1 5 6 2 f6m 1 5 s 2 11 4 13 8 E1 5 6 2 11 -LIJ gg u nach Einfge und Lschops bis zu 4(n  1) Speicherzellen bentigt u hier hilft auch kein bounded array u verkettete Listen haben genau n Elemente, aber zustzliche Zeiger uh u es gibt nicht eine perfekte Datenstruktur fr alle Anwendungen gi gV    http24 Tinio Bingmunn, Christian Schulz Fakultt fr lnlormalik3 Ubung - Algorithmen I Institut lr Theoretische lnlormalik</slot>
  <slot end="4140" start="4110">3| Unbounded Array live!  gV5 g&lt; x1 g  1 5 g;1 5 6 2 f5m 1 5 s 2 11 4 13 8 E1 5 6 2 11 hLIJ gg u nach Einfge und Lschops bis zu 4(n  1) Speicherzellen bentigt u hier hilft auch kein bounded array u verkettete Listen haben genau n Elemente, aber zustzliche Zeiger uh u es gibt nicht eine perfekte Datenstruktur fr alle Anwendungen gi gV    http24 Tinte Bingmgnn, Christian Schulz Fakultt fr Intormatik3 Ubung - Algorithmen I Institut lr Theoretische informaitk</slot>
  <slot end="4170" start="4140">   _ 3| Unbounded Array live!  g .2&lt; x1 s2  1 5 u:1 5 6 2 (Um 1 5 s 2 11 4 13 8 E1 5 6 2 11 -m 1 5 6 i 2 .2E I bei einer Gre von 4n schrumpft das Feld auf 2:7 e n es bleibt Platz fr weitere E emente Sh u whrend dem Schrumpfen: 6m Speicherzellen gleichzeitig belegt _Qj I auer Speicherverwaltung bietet Schrumpfoperation ohne Kopieren gN/ 0-1W s24 ringo Bingmunmchristian Schulz Fakulllirlnlormalik S3 Ubung - Ngolllhmen I Institut w: Theorellsche lnlormalik</slot>
  <slot end="4200" start="4170">Unbounded Array live! 11413 811%_____0101010101l\JI\)|\)I'\)07030703bei einer Gre von 4n schrumpft das Feld auf 2:7es bleibt Platz fr weitere E ementewhrend dem Schrumpfen: 6m Speicherzellen gleichzeitig belegtauer Speicherverwaltung bietet Schrumpfoperation ohne Kopieren3UwE3gz'43(UELOH-E1-7VImU.Qw3Q|-m&lt;EumLIJE|2vW   http24 Tingo Bingmunn, Christian Schulz Fakultt fr Inlonnalik3 Ubung - Algorithmen I Institut lv Theoretische lntormalik</slot>
  <slot end="4230" start="4200">Unbounded Array: Allgemeine Version Kompromiss: im schlimmsten Fall weniger Platz, dafr langsamer?Ja! Durch Wahl des:u Vergrerungsfaklors 1 (hier bisher immer 2)u Schranke n (hier bisher immer 4)der verallgemeinerten Version:3UcuE3x"a:(UELOH-E1-7VImU.9cu3Q|-m&lt;EumLI-IEl:vW   http25 Tilno Bingmann, Christian Schulz Fakultt lr Inlonnalik3 Ubung - Algorrrhmen I lnslllul lr Theorellsche lniormallk</slot>
  <slot end="4260" start="4230">Unbounded Array: Parameter-Tuning realloziere mverkleinere bei nn g w /\ n &gt; 0n amortisierte Laufzeiten bleiben asymptotisch gleich fr 7' &gt; 1.,. &gt; w.n greres 3,01 schneller, bentigt aber mehr Speicherplatzu kleineres J, n: langsamer, bentigt aber weniger Speicherplatz3UwE3x"a:(UEl-OH-E1-7VImU.9cu3Q|-m&lt;EumLIJE|2vW   http25 Tin_|o Bingmann, Christian Schulz Fakultt lr Intormatik3 Ubung - Ngollihmen I Institut Ir Theorellsche lnformatlk</slot>
  <slot end="4290" start="4260">             3| Unbounded Array: Parameter-Tuning xKlT g ..:&lt; 3realloziere in U verkleinere bei an g w A n &gt; 0 m n amortisierte Laufzeiten bleiben 2ms w gleich fr 7' &gt; 1 &gt; 4, gLIJ I ' *  4a in: ;':xiii;i i, bentigt aber nipm    i  Eg I    u; in: Liigiri; n;  bentigt aberwmi; .  u Formeln (asymptotisoh, Beispielwerte fr 3  1.5  2): 4.7j c amortisierte Kosten frpushack: f, : 3 (bisher 2) u amortisierte Kosten frpopBacki j  : 3 (bisher 1) Uh | maximaler Speicherplatzbedarf: (n + i)n : 3.5n (bisher 6N) gE mindestens &gt; 2n gV 4-4W 2E Till_|o Bingmunn, Christian Schulz Fakultt fr lnlormalik E3 Ubung - Algorithmen I Institut luv Theoretische infovmailk</slot>
  <slot end="4320" start="4290">A\K|THashtabellen:Beispielanwendung: Duplikaterkennung3UwE3x"a:(UELOH-E1-7VImL).0cu3Q|-m&lt;EumLIJE'.:vW   http27 Till_|o Bingmann, Christian Schulz Fakultt fr lnlormalik3 Ubung - Algonthmen I Insmul m: Theoretische mfovmauk</slot>
  <slot end="4350" start="4320">Duplikaterkennung Problem:I Gegeben: Folge A ; {a1 . a2. ...a von Zahlenu Frage: Enthlt Aein oder mehrere Duplikate a, a i i j?Ansatz 1 :I Lse Problem mit Sortierenu Idee:n SortiereAw A -: a;...ac In A stehen Duplikate nebeneinandernIA von links nach rechts durchlesen liefert alle DuplikateWorst-Case Laufzeit: Q(nlog n) (siehe Vorlesung Sortieren &amp; C0")3UwE3x"a:(UELOH-E1-7VImU.Qcu3Q|-m&lt;EumLIJEl:vWhttp   28 Tingn Bingmunn, Christian Schulx Fakultt fr Inlormalik3 Ubung - Algonlhmen I Insmul lv Theorellsche lnlovmallk</slot>
  <slot end="4380" start="4350">Duplikaterkennung Problem:I Gegeben: Folge A ; \{a1.a2.. ...a von Zahlenn Frage: Enthlt A ein oder mehrere Duplikate a, V a i i j?Ansatz 2:u Verwende eine Hashtabelle H (rnit verketteten Listen)u Idee:n Fge a.. .. .a nacheinander in H einn Zahl schon drin: Duplikat erkannt!u Laufzeit: Erwartet O(n)u Bei zuflliger Hashlunktion undn wenn H mindestens QM) Slots hat3UcuE3x'43fUELOH-E1-7VImU.Qcu3Q|-tn&lt;EumLIJE|2vWhttp   28 Tinte Bingmann, Christian Schulz Fakultt fr Intormatik3 Ubung - Ngolllhmen I Institut tt Theoretische lnfotmauk</slot>
  <slot end="4410" start="4380">Erkennen von Duplikaten mittels Hashtabelle  BeispielFolge A .: 9.18.42.25.33.18.104 Hashfunktion h(a) : a mod 73456|-m&lt;EumLIJE'.:vW   3Uwt5x.x"a:(UELu?Eh7VI3.9cu3FQ.3s29 Till_|o Bingmsnn, Christian Schulz Fakultt fr lnlormalik3 Ubung - Algonthmen I Insmul m: Theoretische lnfovmauk</slot>
  <slot end="4440" start="4410"> . . 5|1 Erkennen von Dupllkaten mittels  g Hashtabelle  Beispiel ,3&lt; Folge A .: 9.18.42.25.33.18.104 Hashfunktion h(a) : a mod 7 L) "5rum o 1 2 3 4 5 6 ELm T C  C C C H9g l I s.42 9 25 i;? sh  g1 gV 3 o.29 Tin_|o Bingmunmchristian Schulz Fakullrlnlonnalik E 3 Ubung - Algomhmen I Institut Iv Theoretische hormauk</slot>
  <slot end="4470" start="4440"> . . 3|1 Erkennen von Dupllkaten mittels  g Hashtabelle  Beispiel ,3&lt; Folge A .: 9.18.42.25.33.18.104 Hashfunktion h(a) : a mod 7 L) "5rum o 1 2 3 4 5 6 ELm T C  C C C H9g l I E.42 9 25 i;? sh  g1 gV 3 o.329 Tilno Bingmunmchrislian Schulz Fakulltlrlnlormalik S 3 Ubung - Algonthmen I Inslllul Iv Theoretische rnfovmauk</slot>
  <slot end="4500" start="4470"> . . 3|1 Erkennen von Dupllkaten mittels  g Hashtabelle  Beispiel ,3&lt; Folge A .: 9.18.42.25.33.18.104; Hashfunktion h(a) : a mod 7 L) "5rum o 1 2 3 4 5 6 ELu T C I  C T C Hg I | .E_42 9 25 33  5? 8h  g1 gV 3% o.329 ringe Bingmunmchristian Schulz Fakulllirlnlonnalik E 3 Ubung - Algomhmen I Inslllul Iv Theoretische mfovmauk</slot>
  <slot end="4530" start="4500">Erkennen von Duplikaten mittels Hashtabelle  LaufzeitanalyseZwei SchritteI Erzeugen der HashtabelieI Alle Slots mit Null-Zeiger initialisieren| Zeit: O(|A ), da Tabelle iA Slots hatB Finden und Einfgen aller a,- aus A : (a1. . . . . a&gt;|-m&lt;EumLIJEF:vW   3UcuEx.x'43(UEl-u?E1-7VI3Qcu3FQ.3s31 Tingo Bingmunn, Christian Schulz Fakultt lr Inhrmalik3 Ubung - Ngoliihmen I lnslllul luv Theorellsche informauk</slot>
  <slot end="4560" start="4530">Erkennen von mittels _ LKIT LaufzeitanalyseZwei Schritte =  der Hashtabellea: Alle Slots mit Null-Zeiger initialisierenr. Zeit: O( A ), da Tabelle tA Slots hat und aller a,- aus A : ((31.. . ..a)n Zeit pro * :O(1)a Zeit pro * :O(ListenInge)n Aber: Erwartete Laufzeit 0(1)n Denn: Tabelle hato Hierzu Satz aus Vorlesung: erwartete Listenlnge 0(1)2 Gesamtzeit fr Finden und Einfgen: erwartet O( A)3Uwf."x.x"a:(UELO'4-E1-7VImL)Qcu3Q|-m&lt;EumLIJE|2vW   http31 Tillio Bingmann, Christian Schulz Fakultt fr lnlorrnalik3 Ubung - Ngoltihmen I Insmui w: Theorellsche Informatik</slot>
  <slot end="4590" start="4560">Das Paging Problem _ KITAufgabe: Nur Speicherstellen s, (Blcke, Cache, etc).II IIIIIII {SP3{Xi} :XElemente x, mssen zur Verarbeitung in einer Speicherstelie s,geladen sein. Hierzu gibt es eine Operation3Uwt5x.x"a:(UEl-OH-E1-7VImUQcu3Qund eine V  die hier nicht interessiert.|-m&lt;EumLIJE'.:vW   http33 Tinto Bingmann, Christian Schulz Fakultt tr Intormatik3 Ubung - Algorithmen I Institut m: Theoretische informatlk</slot>
  <slot end="4620" start="4590">Das Paging Problem _ Aufgabe: Nur Speicherstellen s, (Blcke, Cache, etc).II IIIIIII {SP3{Xi} :XElemente x, mssen zur Verarbeitung in einer Speicherstelle s,geladen sein. Hierzu gibt es eine Operation3Ucut5x.x"a:(UEl-OH-E1-7VImU.9cu3Qund eine V  die hier nicht interessiert.|-m&lt;EumLIJE'.:vW   http33 Tinin Bingmunn, Christian Schulz Fakultt lr Inlormatik3 Ubung - Algorithmen I Institut li Theoretische Informatik</slot>
  <slot end="4650" start="4620">Das Paging Problem _ Aufgabe: Nur Speicherstellen s, (Blcke, Cache, etc).II IIIIIII {SP3{Xi} :XElemente x, mssen zur Verarbeitung in einer Speicherstelle s,geladen sein. Hierzu gibt es eine Operation3Ucut7x.x"a:(UEl-OH-E1-7VImU.9cu3Qund eine V ' die hier nicht interessiert.|-m&lt;EumLIJE'.:vW   http33 Tinto Bingmunn, Christian Schulz Fakultt lr Intormatik3 Ubung - Algorithmen I Institut w: Theoretische informatlk</slot>
  <slot end="4680" start="4650">Das Paging Problem __ LKITAufgabe: Nur Speicherstellen s, (Blcke, Cache, etc).II IIIIIII {SP3{Xi} :XElemente x, mssen zur Verarbeitung in einer Speicherstelle s,geladen sein. Hierzu gibt es eine Operation3UwEx.x"i:(UEl-OH-E1-7VImU.9cu3Qund eine V  die hier nicht interessiert.|-in&lt;EumLIJE|2vW   http33 Tinio Bingmunn, Christian Schulz Fakultt lr Intormatik3 Ubung - Algorithmen I Institut lr Thecrellsche Informatik</slot>
  <slot end="4710" start="4680">|-m&lt;EumLIJE|2vW SKITespis egwev ReHzucC) Rakewvgoe:4,5, 9,7", Z, S, 4/ 2,3ELI 3a 11m Hlngmmn. cnnmn Schuh3 bung Immer Flkuihl m: Inlnrmankmsmul m: Yneorehscne lnlormank{ _ [_A! IT 3Uwt7x.xa:(UELEE1-7VI5Qcu3FD.5s</slot>
  <slot end="4740" start="4710">ugpfef am RedeocC) KCHEwMEI4,5, 9, ?}, 5,1 2/3J S1997Zf 3s nnp Blngmcnn. cmunn Schulz' a. Ubun  Nwhmen II, .\|lI'I'Fakultt mr Inlormzlnklnslwlul von rneorensme lnfamwllwk|-m&lt;EumIJJE|2vW 5Ucu"27x.x"a:(UEl-u?E1-7VI5Qcu3FQ.a:s </slot>
  <slot end="4770" start="4740">xlu umuxmvv  511m4] z kznnuos urnwuo nun-Ihm wu B:4 Z[g6\SR(S: w 5 741T; 6%zsw-maviqazj (janajqa 46W? )ajc)_&gt;CdIDE TF!F?"9EfDo-hmV5rS.hoT3nz.FrF.mo.C </slot>
  <slot end="4800" start="4770">   3KaCspiQK eiwev Rewieu: f) Kukewog:S;  2 3Eiffa:// webcast.informatik.kit.edu\W 3a nrrgo Bmnnunn, Chnsnan scmma Ubung  Algcnmmen xQ.ua-IS</slot>
  <slot end="4830" start="4800"> SKITugpis ewev Rehieus KOZVECUJEm s.   3|_lTsLl 3E?7 r(   3a mu Bmgmlnn. Dhnniun 5cm.a Uour-g  Aqanxnmeq w 3Uwf.x.x"a:(UELu?Eh7VI5Qa)3FQ.5.:</slot>
  <slot end="4860" start="4830">/SKITespfd eiuev Reh/{eucL/ Rukewoa:4' 5' 9113i: z g_ L-J 3a Tllqo aingmnn, Christina scmma. Umrx} Ngmnhnuzul 3Uw"27x.x"a:(UELu?E1-7VI3Qcu3FQ.3s</slot>
  <slot end="4890" start="4860">|-m&lt;EumLIJE|2vW SKITuspid ecwev Rd-vzuc Reckewfpafe:47 s.   3EEN?2 4 aqqwy; 5 47* 5e3a 11m0 axngnunn. Christian Schulz_ r x | - rl UWE A Amwmnl a u w: m: lnmrmauklnsmul vay (Moralische lmmmank SQL! 3UcuE%x"a:(UELu?E1-7VI3.9cu3FQ.5s</slot>
  <slot end="4920" start="4890">SKIT.uspid um, Reh/(euc Reihenfno-je:4, s.   3 2 4v z.q%x v 4L5 r 5a3a 11m Elngmunn. Chrisllan Schulz H  3. unung  Amme" ' lnsmul rav |-m&lt;EumLIJE|2vW&gt;\x3Uwt7x.x"a:(UELu?E1-7VI5.9cu3FQ.5s   </slot>
  <slot end="4950" start="4920">3| Ein Erwartet 0(1) Pager  E J&lt; Hashlabelle x"  l l_ T l_ l_ l_ l_ l_ Zml ml ml ml ml m! (um 1    ELIJ 1 1 eml ml x CE x? m u:6 5 mi l i 8h m! m! _Q1 Nach Retr/eve(x,) Folge (x4. x3. x6. x2. x9. x1) gN]    Q.ua-IS35 Tin_|o aingmann, Christian Schulz Fakultt fr lnfnnnalik3 Ubung  Algomhmen I rnsucuc m: Theoretische mformallk</slot>
  <slot end="4980" start="4950">Ein Erwartet 0(1) Pager Nach Retrieveoq) Folge &lt;x4.xa. x6. X2.Xg. x1)3"UU4JHashlabelle  x"l T l l l l l "Znil nil nil nil nil nil (ux4 x3 x6 x2 E1 2 3 4 L.1 1 i u?ml ml CX: X9 .76 5 m1 1 8nil nil QG)3|-m&lt;EumLIJE':.vW   Q.ua-IS35 Tin_|o Eingmann, Christian Schulz Fakultt fr Infnnnalik3 Ubung  Algomhmen I msmul m: Theoretische mbvmallk</slot>
  <slot end="5010" start="4980">_ 3| E|n Erwartet 0(1) Pager SGI" g&lt; Hashlabelle U 59mm l in l in nlil nlil in in m next X4 next X8 X6 next X2 Eprev 1 prev 2 3 prev 4 Lm l 1 l E  H9g ml ml c " Cprev prev -_X: X9 Hnext e next 5 mi i l 8h nIl nIl Q1 Nach Retrieve(x,) Folge (x4. x3. x6. x2. x9. x1) g\/ http   35 Tin_|n Eingmann, Christian Schulx Fakultt fr Inlonnalik3 Ubung  Algomhmen I lnslllul m: Theoretische mfovmallk</slot>
  <slot end="5040" start="5010">_ 3| E|n Erwartet 0(1) Pager S01" E&lt; Hashlabelle es"U 59mm in l in nlil nlil in in m next X4 next X8 X6 next X2 Eprev 1 prev 2 3 prev 4 LLIJ 1 1  eg ml ml v c n Cprev prev ._X: X9 Hnext e next 5 mi l l 8h nIl nIl Q1 Nach Retr/eveoq) Folge (x4.xa. x6. X2.Xg. x1) g\/ http   35 Tin_m Eingmann, Christian schulx Fakultt fr Inlomulik3 Ubung  Algomhmen I rnscnuc mv Theoretische mfovmallk</slot>
  <slot end="5070" start="5040">      5Ufz k uEin Erwarte: m}; Page?  E J E *-8:uVI8.0cu3 man m: Inlormalikenscvze Immmam D.uHS</slot>
  <slot end="5100" start="5070">     Ein Erwarte1;- .f: Nach HeIr/evezx 1 Folge n.Sentmels neu zeugt ImmerSpelcherslelle. und prez- au!://webcast.informatik.kit.edu35 mm mngnunn, cmmi-n scnuu3 Ubnmq  Ngomnmun 1Q.uHS</slot>
  <slot end="5130" start="5100">      Nach He/r/evm Senlinel nextSpeicherstell:// webcast.informatik.kit.eduTingo alognunn, Christian Schulzf 3 uumg -Algon|hmenI|-m&lt;EumLIJE|2vW http</slot>
  <slot end="5160" start="5130">Ein Erwartet U; .- 5-013," gKIT    m mNach HeIr/evepn) Fange x4.x3.x5.x3.x9.x x3Sentxnefs next zeigt tmmer auf die ltesteSpeicherstelle. und prev auf die Jngste.3UI!E.x"a:(UELOH-E1-7VImU.0cu3Q 35 m! Binglnln, cnrmun Schult Fukuhl m: Inlonuanx3 lbunq  Algenmmen | Insmul mv Theorehscne lnlevmauk|-m&lt;EumLIJE|2vWhttp   </slot>
  <slot end="5190" start="5160">_ 3| E|n Erwartet 0(1) Pager  3&lt; Hasmabelle A ;2U 59m9 in nlil nlil nlil nlil in m nexc X6 next X2 Eprev 3 prev 4 LLIJ v: Oz: *-g v &lt; n Cprev a prev prev -_X" X3 X| X9 Hnex: e 7 next e next 5 m"" 1 1 1 1 8h nI/ m! m! m! _Qj Nach Retrieveoq) Folge (x4. X3.Xe. x2. Xg.X1. X3.X3&gt; g\/ http   37 Tin_|n Eingmann, Christian Schulx Fakultt fr Infnmulik3 Ubung - Algomhmen I mslllul Vr Theoretische mfovmallk</slot>
  <slot end="5220" start="5190"> Im m.Nach Ffetr/evzs-(mFolge x4.x5.x3.x2.x9.x.x8 x}5wE3x"a:(UEX-u?Eu"VIfUU.9cu3QE Chi! I1 \ 36  Ingnlfnn-m stllan Sohn _ Falumil m: lnlanmllk1 W 7" m9" Insmul lur Theorahscha Inlavmahk|-m&lt;EUmIJJE|2vWhttp   </slot>
  <slot end="5250" start="5220">Ein Ervwzrrxek U0, rage: 1M   3UwE3x"a:(UELOU-E1-7VImL).0a)3Qum m: Imumuxckmscne mlormzvx4 f http3e Tlrno amgmnmnnsuunlmn-r/ganmmwlx  ) </slot>
  <slot end="5280" start="5250">  Nach Retrievepq) Folge X4.Xg.X5.X2Xg.X1X5 x}35 1111p snngmum, Chrininn Schulz Fakull m: Inromuuk3 uumg r Algonmmen r Ynsluul m: Theorelvscha lnmmalnk|- _  _ gm Ein ErwarteI Dm   &lt; f.L) J l  A l 4 gm    g| | | N l E eg x 1 5.  ,. .7_  6 1%! 7%! i! U| ncu1 3V Q.ua-IS   </slot>
  <slot end="5310" start="5280">_ 3| E|n Erwartet 0(1) Pager  g&lt; Hashlabelle l  l l l l l U 59m9 m7 m7 m7 m7 m7 m7 m nexc X6 next X2 Eprev 3 prev 4 LLIJ "v: Ol z: *-g c  gprev a prev prev -_X7 X3 X7 X9 Hnex: 8 7 next e next 5 v"" 1 1 1 1 8h 777l nI/ r7Il I7Il Q1 Nach Retrieve(x) Folge (x4. X3.Xe. x2. Xg.X1. xax3&gt; g\/ http   37 Tingo Eingmann, Christian Schult Fakultt fr Infnmulik3 Ubung - Algomhmen I lnslllul Vl Theoretische mfovmallk</slot>
  <slot end="5340" start="5310">_ 3| E|n Erwartet 0(1) Pager SKIT g&lt; Hasmabelle A A A x.U 59mm nlil nlil in nlil x nlil in m m. x6 u. x2 Eprev 3 prev 4 Lw U I! oz: *-g c n gprev a prev prev -_X" Xe X: X9 anex: s _ 7 next e next 5 v,* 1 1 1 1 8h m/ ni/ m! ml _Qj Nach Retrieve(x) Folge 1x4.xa.x6. x2. Xg.X1.X3.X3&gt; gN/ D.uc-dS37 Till_|n Eingmann, Christian Schult Fakultt fr Informatik3 Ubung - Algomhmen I Insmul ir Theoretische infovmallk   </slot>
  <slot end="5370" start="5340">Strategie: Beispiel aus Java Implementierung der Anordner( ) in AWTund Swing.{v|-m&lt;EL)mu;':VW     :"ca:3;%x"a:ruE)-8E..:U584:u:3Fo.3.: </slot>
  <slot end="5400" start="5370">Strategie: Beispiel aus Java Implementierung der Anordner( ) in AWTund Swing.{v|-m&lt;EumLIJE|2vW     :"ca:3;%x"a:ruE)-u?E..:U584:a:3Fn.3.:</slot>
  <slot end="5430" start="5400">Strategie: Beispiel aus Java Implementierung der Anordner( ) in AWTund Swing.{v|-m&lt;EumLIJE|2vW     :"ca:3;%x"a:ruE)-8E..:U584:a:3Fn.3.:</slot>
  <slot end="5460" start="5430">KITWenn sich viele ven/vandte Klassen nur in ihrem Verhaltenunterscheiden. Strategieobjekte bieten die Mglichkeit.eine Klasse mit einer von mehreren mglichenVerhaltensweisen zu konfigurieren,Wenn unterschiedliche Varianten eines Algorithmusbentigt werden.Wenn ein Algorithmus Datenstrukturen verwendet, dieKlienten nicht bekannt sein sollen.Wenn eine Klasse unterschiedliche Verhaltensweisendefiniert und diese als mehrfache Fallunterscheidungen inihren Operationen erscheinen. Mit Strategie kann mandiese Fallunterscheidungen vermeiden (sw/tch-Iessprogramming).Strategie: Anwendbarkeit (1)Nachlesen: Head First Design Patterns. Kapitel 1i-m&lt;umLIJ|2vWVl       5"c5a:3;xu:ruE&amp;.9E.5V18.9w3Fo.3.CKi.l3  . r ' L  |'|</slot>
</timed-document>
